'use strict';

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var React = require('react');
var _ = require('lodash');

var _require = require('yylib-ui'),
    YYClass = _require.YYClass,
    YYPagination = _require.YYPagination,
    YYMessage = _require.YYMessage;

var YYCommentItem = require('./YYCommentItem');
var PropTypes = YYClass.PropTypes;
var field = YYClass.field;
var ajax = require('yylib-utils/ajax');
require('./style/commentlist.less');

//定义META
var uiMeta = {
    name: 'commentlist',
    fields: [,
    //field参数列表：字段属性名|属性默认值|属性类型|是否必填|属性描述
    field('commentlist', [], PropTypes.array, true, '评论数据'), field('url', '', PropTypes.string, true, '评论列表URL'), field('pageSize', 10, PropTypes.number, true, '每页展示条数'), field('total', undefined, PropTypes.number, true, '总页数')]
};

var YYCommentList = YYClass.create({
    uiMeta: uiMeta,
    getInitialState: function getInitialState() {
        var commentlist = this.props.commentlist || [];
        var total = this.props.total;
        return {
            total: total, //总页数
            currentPage: 0, //当前页数
            commentlist: commentlist
        };
    },
    componentDidMount: function componentDidMount() {
        if (this.props.url) {
            //外部传入URL则使用URL请求
            ajax.getJSON(this.props.url, function (result) {
                if (result.success) {
                    _this.setState({
                        total: result.total,
                        currentPage: result.currentPage,
                        commentlist: result.backData
                    });
                } else {
                    YYMessage.warning(result.backMsg);
                }
            });
        }
    },
    componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
        var newState = {};
        if (nextProps.commentlist && _.isEqual(nextProps.commentlist, this.props.commentlist)) {
            newState.commentlist = nextProps.commentlist; //外部评论数据更新
        }
        if (nextProps.total && _.isEqual(nextProps.total, this.props.total)) {
            newState.total = nextProps.total; //外部总页数更新
        }
        if (newState.keys().length) {
            this.setState(newState);
        }
    },
    //切换当前页
    _onPageChange: function _onPageChange(page) {
        this.setState({ currentPage: page });
    },
    //渲染列表
    _renderList: function _renderList(commentlist) {
        return _.map(this.state.commentlist, function (comment, index) {
            return React.createElement(YYCommentItem, _extends({ key: index }, comment));
        });
    },
    render: function render() {
        return React.createElement(
            'div',
            { className: this.className() },
            this._renderList(this.state.commentlist),
            React.createElement(
                'div',
                { className: 'comment-paging' },
                React.createElement(YYPagination, { pageSize: this.props.pageSize, onChange: this._onPageChange, current: this.state.currentPage, total: this.props.total })
            )
        );
    }
});

module.exports = YYCommentList;