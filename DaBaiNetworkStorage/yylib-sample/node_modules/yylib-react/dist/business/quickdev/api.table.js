'use strict';

/**
 * Created by Administrator on 2016/12/3.
 */
var React = require('react');
var _ = require('lodash');

var _require = require('yylib-ui'),
    YYClass = _require.YYClass,
    YYMessage = _require.YYMessage,
    YYTable = _require.YYTable;

var ajax = require('yylib-utils/ajax');
var BaseHost = require('../BaseHost');
var ApiTable = {};
//初始化配置
ApiTable.init = function () {
    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : { page: null, table: null };
    var page = options.page,
        table = options.table;
    //行选择的配置

    if (!table.rowSelection) table.rowSelection = {};
    table.rowSelection.onChange = function (selectedRowKeys, selectedRows) {
        table.rowSelection.selectedRowKeys = selectedRowKeys;
        page.refresh();
    };
    //分页的相关配置
    if (!table.pagination) table.pagination = {};
    //当跳转页码时
    table.pagination.onChange = function (current) {
        table.pagination.current = current;
        ApiTable.loadData({ page: page, table: table });
    };
    //当每页显示数发生变更时
    table.pagination.onShowSizeChange = function (current, pageSize) {
        table.pagination.current = current;
        table.pagination.pageSize = pageSize;
        ApiTable.loadData({ page: page, table: table });
    };
};
//加载表格数据
ApiTable.loadData = function () {
    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : { page: null, table: null, params: null };

    console.log('ApiTable ajax loaddata');
    var page = options.page,
        table = options.table,
        params = options.params,
        url = options.url;

    var _params = {};
    //_params.sort = [];
    var baseUrl = BaseHost + '/icop-front-web';
    if (table && table.dataprops) {
        if (table.dataprops.system && table.dataprops.system["baseUrl"]) {
            baseUrl = table.dataprops.system["baseUrl"] + table.dataprops.system["systemName"];
        }
        if (table.dataprops.entity && table.dataprops.entity["entityFullName"]) {
            _params.entityName = table.dataprops.entity["entityFullName"];
        }
    }
    //查询接口URL
    var _url = url ? url : baseUrl + "/common/findJsonArrayPage";
    //分页查询参数
    var pageNumber = table.pagination && table.pagination.current ? table.pagination.current : 1;
    var pageSize = table.pagination && table.pagination.pageSize ? table.pagination.pageSize : YYTable.getDefaultPageSize(table.key);
    //需要查询的字段
    var properties = [];
    _.forEach(table.children, function (column) {
        properties.push(column.dataIndex);
    });
    _params = _.assign(_params, params, {
        properties: properties,
        pageNumber: pageNumber - 1,
        pageSize: pageSize
    });
    table.loading = true; //开启遮罩
    page.refresh();
    //执行查询
    ajax.postJSON(_url, _params, function (result) {
        if (result && result.success) {
            var dataSource = result.backData;
            //本页数据
            table.dataSource = dataSource.content;
            //分页器数据
            table.pagination.current = dataSource.number + 1;
            table.pagination.total = dataSource.totalElements;
            table.pagination.pageSize = dataSource.size;
            table.loading = false; //关闭遮罩
            page.refresh(function () {
                //console.log('refresh--->完毕');
            });
        }
    });
};
//批量删除数据
ApiTable.batchDelete = function () {
    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : { page: null, table: null };
    var page = options.page,
        table = options.table,
        url = options.url,
        params = options.params,
        success = options.success;
    //获取行勾选的数据键值

    var ids = table.rowSelection.selectedRowKeys;
    var baseUrl = BaseHost + '/icop-front-web';
    if (ids && ids.length) {
        var _params = { ids: ids };
        if (table && table.dataprops) {
            if (table.dataprops.system && table.dataprops.system["baseUrl"]) {
                baseUrl = table.dataprops.system["baseUrl"] + table.dataprops.system["systemName"];
            }
            if (table.dataprops.entity && table.dataprops.entity["entityFullName"]) {
                _params.entityName = table.dataprops.entity["entityFullName"];
            }
        }
        _params = _.assign(_params, params);
        //删除接口URL
        var _url = url ? url : baseUrl + "/common/batchdelete";
        //执行删除
        ajax.postJSON(_url, _params, function (result) {
            if (result && result.success) {
                //删除成功
                //清除历史勾选项
                table.rowSelection.selectedRowKeys = [];
                if (_.isFunction(success)) {
                    success();
                } else {
                    //重新刷新列表
                    ApiTable.loadData({ page: page, table: table });
                }
            }
        });
    } else {
        YYMessage.error('请勾选需要删除的数据');
    }
};
module.exports = ApiTable;