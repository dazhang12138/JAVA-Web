'use strict';

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var React = require('react');

var _require = require('yylib-ui'),
    YYClass = _require.YYClass,
    YYForm = _require.YYForm,
    YYFormItem = _require.YYFormItem,
    YYRow = _require.YYRow,
    YYCol = _require.YYCol,
    YYInput = _require.YYInput,
    YYTextarea = _require.YYTextarea,
    YYDatePicker = _require.YYDatePicker;

var PropTypes = YYClass.PropTypes;
var field = YYClass.field;
var _ = require('lodash');

//定义META
var uiMeta = {
    name: 'auditinfo',
    fields: [
    // field参数列表：字段属性名|属性默认值|属性类型|是否必填|属性描述
    field('primaryKey', 'id', PropTypes.string, false, '表单主键'), field('billType', null, PropTypes.string, false, '单据类型'), field('bpm', true, PropTypes.bool, false, '是否走审批流'), field('horizontal', false, PropTypes.bool, false, '水平排列布局'), field('onSubmit', null, PropTypes.func, true, '数据验证成功后回调事件')]
};

//合约云单据信息模版组件
var CPAuditInfo = YYClass.create({
    uiMeta: uiMeta,
    _billStateToText: function _billStateToText(billState) {
        var billStateName = '';
        switch (billState) {
            case 0:
                billStateName = '自由态';
                break;
            case 1:
                billStateName = '已提交';
                break;
            case 2:
                billStateName = '审批中';
                break;
            case 3:
                billStateName = '审批通过';
                break;
            case 4:
                billStateName = '审批不通过';
                break;
            case 9:
                billStateName = '已执行';
                break;
        }
        return billStateName;
    },
    renderBpm: function renderBpm() {
        var formItemLayout = {
            labelCol: { span: 6 },
            wrapperCol: { span: 14 }
        };
        var getFieldProps = this.props.form.getFieldProps;
        //审核人

        var reviewerProps = getFieldProps('reviewer');
        //审批时间
        var reviewtimeProps = getFieldProps('reviewtime');
        return React.createElement(
            YYRow,
            null,
            React.createElement(
                YYCol,
                { className: 'item-border-right item-border-bottom', xs: { span: 24 }, sm: { span: 12 }, md: { span: 12 }, lg: { span: 12 } },
                React.createElement(
                    YYFormItem,
                    _extends({ label: '\u5BA1\u6279\u4EBA' }, formItemLayout),
                    React.createElement(
                        'span',
                        null,
                        reviewerProps.value
                    )
                )
            ),
            React.createElement(
                YYCol,
                { className: 'item-border-bottom', xs: { span: 24 }, sm: { span: 12 }, md: { span: 12 }, lg: { span: 12 } },
                React.createElement(
                    YYFormItem,
                    _extends({ label: '\u5BA1\u6279\u65F6\u95F4' }, formItemLayout),
                    React.createElement(
                        'span',
                        null,
                        reviewtimeProps.value
                    )
                )
            )
        );
    },
    render: function render() {
        var formItemLayout = {
            labelCol: { span: 6 },
            wrapperCol: { span: 14 }
        };
        var getFieldProps = this.props.form.getFieldProps;

        var primaryKey = this.props.primaryKey;
        var billType = this.props.billType;
        //主键ID
        var primaryKeyProps = null;
        if (!_.isEmpty(primaryKey)) primaryKeyProps = getFieldProps(primaryKey);
        //是否删除
        var drProps = getFieldProps('dr');
        //时间戳
        var tsProps = getFieldProps('ts');
        //附件管理组件ID
        var attachMgrProps = getFieldProps('attachMgr');
        //单据类型
        var billTypeProps = getFieldProps('billType', { initialValue: billType });
        //单据编码
        var billCodeProps = getFieldProps('billCode');
        //单据状态
        var billStateProps = getFieldProps('billState');
        var billStateName = this._billStateToText(billStateProps && billStateProps.value !== undefined ? billStateProps.value : -1);
        //创建组织ID
        var companyIdProps = getFieldProps('companyId');
        //创建人ID
        var creatoridProps = getFieldProps('creatorid');
        //创建人
        var creatorProps = getFieldProps('creator');
        //创建时间
        var createtimeProps = getFieldProps('createtime');
        //修改人ID
        var modifieridProps = getFieldProps('modifierid');
        //修改人
        var modifierProps = getFieldProps('modifier');
        //修改时间
        var modifytimeProps = getFieldProps('modifytime');
        //审核人ID
        var revieweridProps = getFieldProps('reviewerid');
        var cls = this.className();
        var colClsBottom = { className: 'item-border-bottom' };
        var colClsRightBottom = { className: 'item-border-right item-border-bottom' };
        return React.createElement(
            YYForm,
            _extends({}, this.props, { form: null, className: cls }),
            React.createElement(
                YYRow,
                null,
                React.createElement(YYInput, _extends({}, primaryKeyProps, { readOnly: true, style: { display: 'none' } })),
                React.createElement(YYInput, _extends({}, drProps, { style: { display: 'none' } })),
                React.createElement(YYInput, _extends({}, tsProps, { style: { display: 'none' } })),
                React.createElement(YYTextarea, _extends({}, attachMgrProps, { style: { display: 'none' } })),
                React.createElement(YYInput, _extends({}, billTypeProps, { style: { display: 'none' } })),
                React.createElement(YYInput, _extends({}, companyIdProps, { readOnly: true, style: { display: 'none' } })),
                React.createElement(YYInput, _extends({}, creatoridProps, { readOnly: true, style: { display: 'none' } })),
                React.createElement(YYInput, _extends({}, modifieridProps, { readOnly: true, style: { display: 'none' } })),
                React.createElement(YYInput, _extends({}, revieweridProps, { readOnly: true, style: { display: 'none' } }))
            ),
            React.createElement(
                YYRow,
                null,
                React.createElement(
                    YYCol,
                    _extends({}, colClsRightBottom, { xs: { span: 24 }, sm: { span: 12 }, md: { span: 12 }, lg: { span: 12 } }),
                    React.createElement(
                        YYFormItem,
                        _extends({ label: '\u5355\u636E\u7F16\u53F7\uFF1A' }, formItemLayout),
                        React.createElement(
                            'span',
                            null,
                            billCodeProps.value
                        )
                    )
                ),
                React.createElement(
                    YYCol,
                    _extends({}, colClsBottom, { xs: { span: 24 }, sm: { span: 12 }, md: { span: 12 }, lg: { span: 12 } }),
                    React.createElement(
                        YYFormItem,
                        _extends({ label: '\u5355\u636E\u72B6\u6001\uFF1A' }, formItemLayout),
                        React.createElement(
                            'span',
                            null,
                            billStateName
                        )
                    )
                )
            ),
            React.createElement(
                YYRow,
                null,
                React.createElement(
                    YYCol,
                    _extends({}, colClsRightBottom, { xs: { span: 24 }, sm: { span: 12 }, md: { span: 12 }, lg: { span: 12 } }),
                    React.createElement(
                        YYFormItem,
                        _extends({ label: '\u521B\u5EFA\u4EBA' }, formItemLayout),
                        React.createElement(
                            'span',
                            null,
                            creatorProps.value
                        )
                    )
                ),
                React.createElement(
                    YYCol,
                    _extends({}, colClsBottom, { xs: { span: 24 }, sm: { span: 12 }, md: { span: 12 }, lg: { span: 12 } }),
                    React.createElement(
                        YYFormItem,
                        _extends({ label: '\u521B\u5EFA\u65F6\u95F4' }, formItemLayout),
                        React.createElement(
                            'span',
                            null,
                            createtimeProps.value
                        )
                    )
                )
            ),
            React.createElement(
                YYRow,
                null,
                React.createElement(
                    YYCol,
                    _extends({}, colClsRightBottom, { xs: { span: 24 }, sm: { span: 12 }, md: { span: 12 }, lg: { span: 12 } }),
                    React.createElement(
                        YYFormItem,
                        _extends({ label: '\u4FEE\u6539\u4EBA' }, formItemLayout),
                        React.createElement(
                            'span',
                            null,
                            modifierProps.value
                        )
                    )
                ),
                React.createElement(
                    YYCol,
                    _extends({}, colClsBottom, { xs: { span: 24 }, sm: { span: 12 }, md: { span: 12 }, lg: { span: 12 } }),
                    React.createElement(
                        YYFormItem,
                        _extends({ label: '\u4FEE\u6539\u65F6\u95F4' }, formItemLayout),
                        React.createElement(
                            'span',
                            null,
                            modifytimeProps.value
                        )
                    )
                )
            ),
            this.props.bpm ? this.renderBpm() : null
        );
    }
});

CPAuditInfo = YYForm.create()(CPAuditInfo);
module.exports = CPAuditInfo;