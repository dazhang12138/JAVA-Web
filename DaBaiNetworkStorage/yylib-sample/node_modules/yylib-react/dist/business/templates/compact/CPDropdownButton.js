'use strict';

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var React = require('react');

var _require = require('yylib-ui'),
    YYButtonSelect = _require.YYButtonSelect,
    YYButtonItem = _require.YYButtonItem;

require('./dropdownbutton.less');

var CPDropdownButton = React.createClass({
    displayName: 'CPDropdownButton',

    getDefaultProps: function getDefaultProps() {
        return { text: '下拉按钮' };
    },
    _childrenToButtonItem: function _childrenToButtonItem() {
        var children = this.props.children;

        var viewItems = [];
        if (Array.isArray(children)) {
            for (var idx = 0; idx < children.length; idx++) {
                var child = children[idx];
                if (React.isValidElement(child)) {
                    //CPDropdownButtonItem
                    viewItems.push(React.createElement(
                        YYButtonItem,
                        { clickKey: child.props.uikey, className: child.props.className },
                        child.props.uititle
                    ));
                }
            }
        }
        return viewItems;
    },
    render: function render() {
        return React.createElement(
            YYButtonSelect,
            _extends({}, this.props, { clickKey: this.props.uikey, buttonText: this.props.text, className: 'cp2-dropdown-button',
                selectClassName: 'cp2-dropdown-menu' }),
            this._childrenToButtonItem()
        );
    }
});
module.exports = CPDropdownButton;