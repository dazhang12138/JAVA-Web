'use strict';

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var React = require('react');
var _ = require('lodash');

var _require = require('yylib-ui'),
    YYClass = _require.YYClass,
    YYArea = _require.YYArea;

var TableWidget = require('../../widgets/TableWidget');

var CPListTable = YYClass.create({
    render: function render() {
        //var scrollX = this._getScrollX();
        //var scroll = _.assign({x:scrollX>0?scrollX:true,y:460},this.props.scroll);
        return React.createElement(
            YYArea,
            { className: 'cp2-center-list' },
            React.createElement(TableWidget, _extends({}, this.props, { ref: 'myTableWidget' }))
        );
    },
    getSelectedRowKeys: function getSelectedRowKeys() {
        return this.refs.myTableWidget ? this.refs.myTableWidget.getSelectedRowKeys() : null;
    },
    getSelectedRowData: function getSelectedRowData() {
        return this.refs.myTableWidget ? this.refs.myTableWidget.getSelectedRowData() : null;
    },
    getDataSource: function getDataSource() {
        return this.refs.myTableWidget ? this.refs.myTableWidget.getDataSource() : [];
    },
    queryData: function queryData() {
        if (this.refs.myTableWidget) this.refs.myTableWidget.queryData();
    },
    getPagination: function getPagination() {
        return this.refs.myTableWidget ? this.refs.myTableWidget.getPagination() : null;
    },
    deleteData: function deleteData(options) {
        if (this.refs.myTableWidget) this.refs.myTableWidget.deleteData(options);
    },
    clearSelectRowKeys: function clearSelectRowKeys() {
        if (this.refs.myTableWidget) this.refs.myTableWidget.clearSelectRowKeys();
    }
    //,_getScrollX:function(){
    //    //计算出总列宽度，以保证超出屏幕时水平滚动条正常显示
    //    var scrollX = 0;
    //    if(this.props.children){
    //        _.forEach(this.props.children,function(tableCol,index){
    //            if(React.isValidElement(tableCol)){
    //                if(tableCol.props.isShow!==false){
    //                    scrollX = scrollX+(isNaN(parseInt(tableCol.props.width))?100:parseInt(tableCol.props.width));
    //                }
    //            }
    //        });
    //    }
    //    return scrollX;
    //}
});
module.exports = CPListTable;