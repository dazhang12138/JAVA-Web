'use strict';

/**
 * Created by yangmiao on 2016/9/13.
 */
var React = require('react');

var _require = require('yylib-ui'),
    YYClass = _require.YYClass,
    YYTimeline = _require.YYTimeline,
    YYTimelineItem = _require.YYTimelineItem,
    YYButton = _require.YYButton,
    YYMessage = _require.YYMessage,
    YYSpin = _require.YYSpin,
    YYScrollbar = _require.YYScrollbar;

var PropTypes = YYClass.PropTypes;
var field = YYClass.field;
var ajax = require('yylib-utils/ajax');
var url = require('./Resturl');
require('./index.less');

//定义META
var uiMeta = {
    name: 'audit',
    fields: [
    //field参数列表：字段属性名|属性默认值|属性类型|是否必填|属性描述
    field('busiId', '', PropTypes.string, false, '单据ID'), field('serverUrl', url.MESSAGE_SERVER, PropTypes.string, false, '审计数据地址'), field('pageSize', 5, PropTypes.number, false, '页码')]
};

var YYAudit = YYClass.create({
    uiMeta: uiMeta,
    getInitialState: function getInitialState() {
        return {
            operData: [],
            current: 1, //当前页码
            loading: false //正在加载
        };
    },
    componentDidMount: function componentDidMount() {
        this._fetch(1);
    },

    componentWillReceiveProps: function componentWillReceiveProps(nextProps, nextState) {
        if (nextProps.busiId === this.props.busiId) {
            this.setState({ operData: [], current: 1 });
        }
    },
    onGetMore: function onGetMore(e) {
        e.preventDefault();
        var _state = this.state,
            current = _state.current,
            totalPage = _state.totalPage;

        if (current > totalPage) {
            YYMessage.info('已无更多');
            return;
        } else {
            this._fetch(current);
        }
    },

    //获取当前页的数据
    _fetch: function _fetch(current) {
        var self = this;
        var _props = this.props,
            pageSize = _props.pageSize,
            auditData = _props.auditData,
            busiId = _props.busiId;
        var operData = this.state.operData;

        //如果是第一页，将operData指控

        if (operData === 1) {
            operData = [];
        }

        var req = {
            currentPage: current,
            pageSize: pageSize,
            busiId: busiId
        };
        if (busiId) {
            this.setState({ loading: true });
            ajax.getJSON(this.props.serverUrl + "message_focus/logPage", req, function (result) {
                if (result.success) {
                    self.setState({
                        loading: false,
                        current: ++current,
                        operData: operData.concat(result.backData.items ? result.backData.items : []),
                        totalPage: result.backData.totalPage
                    });
                } else {
                    YYMessage.error('error');
                    self.setState({ loading: false });
                }
            });
            this.setState({ loading: false });
        }
    },

    _formatValue: function _formatValue(value) {
        if (value === '' || value == undefined || value == "null" || value == "undefined") {
            return '(为空)';
        }
        return value;
    },
    render: function render() {
        var _this = this;

        var _state2 = this.state,
            operData = _state2.operData,
            current = _state2.current;

        var timelineItems;
        if (operData.length > 0) {
            timelineItems = operData.map(function (audit) {
                var properties;
                if (audit.operInfo && audit.operInfo !== '') {
                    var operInfo = JSON.parse(audit.operInfo);

                    properties = operInfo.propertyRecords && operInfo.propertyRecords.map(function (prop, index) {
                        //过滤掉第一项
                        if (index !== 0) {
                            return React.createElement(
                                'p',
                                { key: index },
                                '\u5C06',
                                React.createElement(
                                    'span',
                                    { className: 'propName' },
                                    _this._formatValue(prop.propName)
                                ),
                                '\u4ECE',
                                React.createElement(
                                    'span',
                                    { className: 'preValue' },
                                    _this._formatValue(prop.preValue)
                                ),
                                '\u4FEE\u6539\u4E3A',
                                React.createElement(
                                    'span',
                                    { className: 'curValue' },
                                    _this._formatValue(prop.curValue)
                                )
                            );
                        }
                    });
                }
                var time = new Date(audit.createTime);
                return React.createElement(
                    YYTimelineItem,
                    { key: audit.id },
                    React.createElement(
                        'p',
                        null,
                        React.createElement(
                            'span',
                            { className: 'modifyName' },
                            audit.operName
                        ),
                        '\u4E8E',
                        React.createElement(
                            'span',
                            { className: 'modifiedTime' },
                            time.getFullYear() + '\u5E74' + time.getMonth() + '\u6708' + time.getMinutes() + '\u5206' + time.getSeconds() + '\u79D2'
                        )
                    ),
                    properties
                );
            });
        }
        return React.createElement(
            YYSpin,
            { spinning: this.state.loading },
            React.createElement(
                YYTimeline,
                {
                    pending: React.createElement(
                        'a',
                        { onClick: this.onGetMore },
                        '\u67E5\u770B\u66F4\u591A'
                    ),
                    className: this.className() },
                timelineItems
            )
        );
    }
});

module.exports = YYAudit;