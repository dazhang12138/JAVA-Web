'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.loadAttachList = loadAttachList;
exports.delAttach = delAttach;
exports.loadFileListByFileIds = loadFileListByFileIds;
exports.handleUrl = handleUrl;
exports.showErrMsg = showErrMsg;
exports.formatDate = formatDate;
/**
 * Created by ge on 2016/6/20.
 * 附件
 */

var ajax = require('../../utils/ajax');

var _require = require('yylib-ui'),
    YYClass = _require.YYClass,
    YYNotice = _require.YYNotice,
    YYMessage = _require.YYMessage;

var downloadUrl = exports.downloadUrl = "/icop-file/file/download?id=";
//获取附件列表的url
var listUrl = exports.listUrl = "/icop-file/file/list";
//上传url
var uploadUrl = exports.uploadUrl = "/icop-file/file/upload2";

var delUrl = exports.delUrl = "/icop-file/file/del";
//根据附件id获取纯附件列表
var getFileListByFileIdsUrl = exports.getFileListByFileIdsUrl = "/icop-file/file/getFileListByFileIds";

function loadAttachList(url, params, onSuccess, onError) {
    /**
     * ajaxId用于解决同时发出两个请求响应结果不同步的问题
     * 例如：【请求1】响应时间过长，【请求2】响应时间短，【请求1】的响应结果覆盖了【请求2】的响应结果
     * 请求1---》loadFileList_1504679168772_191
     * 请求2---》loadFileList_1504679168842_202
     * 响应2---》loadFileList_1504679168842_202
     * 响应1---》loadFileList_1504679168772_191
     */
    var ajaxId = params && params.ajaxId ? params.ajaxId : "loadAttachList_" + YYClass.uuid();
    ajax.getJSON(url, params, function (data) {
        if (data.success) {
            if (onSuccess) {
                onSuccess(data.backData, ajaxId);
            }
        } else {
            if (onError) {
                onError("查询数据失败", ajaxId);
            }
        }
    }, function (error) {
        if (onError) {
            onError("服务器请求失败", ajaxId);
        }
    });
}

function delAttach(url, params, onSuccess, onError) {
    ajax.getJSON(url, params, function (data) {
        onSuccess(data);
    }, function (error) {
        if (onError) {
            onError("服务器请求失败");
        }
    });
}

function loadFileListByFileIds(url, params, onSuccess, onError) {
    ajax.getJSON(url, params, function (data) {
        onSuccess(data);
    }, function (error) {
        if (onError) {
            onError("服务器请求失败");
        }
    });
}
/**
 * 处理url，如果超出长度限制则截取文件名
 * url长度限制在了256，编码后一个中文占了9位
 * @param {*} url 
 */
function handleUrl(url) {
    if (!url) {
        return "";
    }
    var idx = url.lastIndexOf("filename=");
    var limit = 250;
    if (idx > -1) {
        var encodeUrl = encodeURI(url);
        if (encodeUrl.length > limit) {
            var prefixUrl = url.substr(0, idx + 9);
            var filename = url.substring(idx + 9, url.length);

            var filenameNoExt = filename;
            var extension = "";
            var extIdx = filename.lastIndexOf(".");
            if (extIdx > -1) {
                filenameNoExt = filename.substr(0, extIdx);
                extension = filename.substring(extIdx, filename.length);
            }

            var leftLen = limit - prefixUrl.length - extension.length;

            var newFilename = filenameNoExt;

            var len = 0;
            for (var i = 0; i < filenameNoExt.length; i++) {
                var length = filenameNoExt.charCodeAt(i);
                if (length >= 0 && length <= 128) {
                    len += 1;
                } else {
                    len += 9;
                }
                if (len > leftLen) {
                    newFilename = filenameNoExt.substring(0, i);
                    break;
                }
            }

            console.log("newFilename", newFilename);
            console.log("extension", extension);

            var newurl = prefixUrl + newFilename + "@" + extension;
            return newurl;
        }
        return url;
    }
    return url;
}

function showErrMsg(title, msg) {
    /* YYNotice["error"]({
        message: title,
        description: msg
    }); */
    YYMessage.error(msg);
}

function formatDate(date, format) {
    if (date == null || !(date instanceof Date)) {
        return date;
    }
    var o = {
        "M+": date.getMonth() + 1,
        "d+": date.getDate(),
        "H+": date.getHours(),
        "m+": date.getMinutes(),
        "s+": date.getSeconds(),
        "q+": Math.floor((date.getMonth() + 3) / 3),
        "S": date.getMilliseconds()
    };
    if (!format) {
        format = "yyyy-MM-dd";
    }

    if (/(y+)/.test(format)) {
        format = format.replace(RegExp.$1, (date.getFullYear() + "").substr(4 - RegExp.$1.length));
    }

    for (var k in o) {
        if (new RegExp("(" + k + ")").test(format)) {
            format = format.replace(RegExp.$1, RegExp.$1.length == 1 ? o[k] : ("00" + o[k]).substr(("" + o[k]).length));
        }
    }
    return format;
}