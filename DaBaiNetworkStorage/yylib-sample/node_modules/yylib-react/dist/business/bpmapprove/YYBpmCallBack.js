'use strict';

var _reactRedux = require('react-redux');

/**
 * Created by gaobw1 on 2017/3/13.
 */
var React = require('react');

var _require = require('yylib-ui'),
    YYClass = _require.YYClass,
    YYPage = _require.YYPage,
    ApproveComp = _require.ApproveComp,
    YYButton = _require.YYButton,
    YYMessage = _require.YYMessage;

var ajax = require('yylib-utils/ajax');
var mapStateToProps = function mapStateToProps(state) {
	return {
		bpm: state.bpm
	};
};

var YYBpmCallBack = YYClass.create({

	onClick: function onClick() {
		var _props = this.props,
		    params = _props.params,
		    serUrl = _props.serUrl,
		    getData = _props.getData;


		var url = serUrl + "/icop-bpmcenter-web/bpm/doCallBack";

		if (!params.billId) {

			YYMessage.error("找不到对应的表单");
		} else if (!params.billTypeId) {
			YYMessage.error("找不到对应的单据类型");
		} else {
			ajax.postJSON(url, params, null, function (error) {
				YYMessage.error("网络异常，稍后重试！");
			}, function (data) {

				if (data != null && data.status == 200) {

					var param = eval("(" + data.text + ")");
					if (param != null) {
						if (param.success == true && param.msg) {
							YYMessage.success(param.msg);
						} else {
							YYMessage.error(param.msg);
						}
					}
				}
				if (getData && typeof getData == "function") {
					getData(JSON.parse(data.text));
				}
			});
		}
	},
	render: function render() {
		return React.createElement(
			'div',
			null,
			React.createElement(
				YYButton,
				{ type: 'primary', onClick: this.onClick },
				'\u6536\u56DE'
			)
		);
	}
});
module.exports = (0, _reactRedux.connect)(mapStateToProps)(YYBpmCallBack);