'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactDom = require('react-dom');

var _reactDom2 = _interopRequireDefault(_reactDom);

var _antd = require('antd');

var _reactCustomScrollbars = require('react-custom-scrollbars');

var _reactRedux = require('react-redux');

require('./bpm/styles/less/yyapproveuser.less');

var _bpm = require('./bpm/actions/bpm');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _require = require('yylib-ui'),
    YYButton = _require.YYButton,
    YYModal = _require.YYModal,
    YYTransfer = _require.YYTransfer;

var TabPane = _antd.Tabs.TabPane;

var mapStateToProps = function mapStateToProps(state) {
	return {
		bpm: state.bpm
	};
};
//规范属性类型
var propTypes = {
	dispatch: _react2.default.PropTypes.func
};

var YYApproveUser = function (_React$Component) {
	_inherits(YYApproveUser, _React$Component);

	function YYApproveUser(props) {
		_classCallCheck(this, YYApproveUser);

		var _this = _possibleConstructorReturn(this, (YYApproveUser.__proto__ || Object.getPrototypeOf(YYApproveUser)).call(this, props));

		_this.state = {
			visible: false,
			orgId: null,
			userId: null,
			type: null,
			bpmId: null,
			billTypeId: null,
			activeKey: null,
			selectedItem: [],
			comfirmAble: false
		};
		_this.close = _this.close.bind(_this);
		_this.renderItem = _this.renderItem.bind(_this);
		_this.handleChange = _this.handleChange.bind(_this);
		_this.comfirm = _this.comfirm.bind(_this);
		_this.onChangeTab = _this.onChangeTab.bind(_this);
		return _this;
	}

	_createClass(YYApproveUser, [{
		key: 'componentDidMount',
		value: function componentDidMount() {
			var _props = this.props,
			    visible = _props.visible,
			    serUrl = _props.serUrl,
			    orgId = _props.orgId,
			    userId = _props.userId,
			    type = _props.type,
			    bpmId = _props.bpmId,
			    billTypeId = _props.billTypeId;

			this.setState({
				visible: visible,
				orgId: orgId,
				userId: userId,
				type: type,
				bpmId: bpmId,
				billTypeId: billTypeId
			});
			var data = {
				userId: userId,
				billtypeId: billTypeId,
				cbiztypeId: "",
				orgId: orgId,
				bpmId: bpmId,
				approveType: "同意"
			};
			var dispatch = this.props.dispatch;

			if (type != null && type == 'approve') {
				dispatch((0, _bpm.queryAssignUser)(serUrl, data));
			} else if (type != null && type == 'submit') {
				dispatch((0, _bpm.queryStartAssignUser)(serUrl, data));
			}
		}
	}, {
		key: 'componentWillReceiveProps',
		value: function componentWillReceiveProps(nextProps) {
			var bpm = nextProps.bpm;

			if (bpm != null && bpm.user != null) {
				if (bpm.user.data != null && bpm.user.data.length > 0) {
					this.setState({ activeKey: bpm.user.data[0].activityId });
					var keys = [];
					for (var i = 0; i < bpm.user.data.length; i++) {
						var activeKey = bpm.user.data[i].activityId;
						var item = {
							activeKey: activeKey
						};
						keys.push(item);
					}
					this.setState({
						selectedItem: keys
					});
				}
			}
		}
	}, {
		key: 'close',
		value: function close(e) {
			this.props.close();
		}
	}, {
		key: 'comfirm',
		value: function comfirm() {
			var selectedItem = this.state.selectedItem;

			for (var i = 0; i < selectedItem.length; i++) {
				if (selectedItem[i].targetKeys == null || selectedItem[i].targetKeys < 1) {
					_antd.message.info('请选择下一个环节的参与者！');
					return;
				}
			}
			this.props.comfirm(selectedItem);
			this.setState({
				comfirmAble: true
			});
		}
	}, {
		key: 'renderItem',
		value: function renderItem(item) {
			var customLabel = _react2.default.createElement(
				'span',
				{ className: 'yyui-bpm-custom-item', title: item.title },
				item.title,
				'\xA0\xA0\xA0\xA0\xA0\xA0',
				item.description
			);

			return {
				label: customLabel, // for displayed item
				value: item.title // for title and filter matching
			};
		}
	}, {
		key: 'handleChange',
		value: function handleChange(targetKeys, direction, moveKeys) {
			var _state = this.state,
			    activeKey = _state.activeKey,
			    selectedItem = _state.selectedItem;

			if (selectedItem.length > 0) {
				for (var i = 0; i < selectedItem.length; i++) {
					if (activeKey == selectedItem[i].activeKey) {
						selectedItem[i].targetKeys = targetKeys;
					}
				}
			}
			this.setState({
				selectedItem: selectedItem
			});
		}
	}, {
		key: 'onChangeTab',
		value: function onChangeTab(activeKey) {
			this.setState({ activeKey: activeKey });
		}
	}, {
		key: 'render',
		value: function render() {
			var _this2 = this;

			var titles = ["待选审批人", "已选审批人"];
			var bpm = this.props.bpm;

			var assignList = [];
			if (bpm != null && bpm.user != null) {
				var assign = bpm.user;
				if (assign.assignAble) {
					assignList = assign.data;
				}
			}

			for (var _i = 0; _i < assignList.length; _i++) {
				var participants = assignList[_i].participants;
				var mockData = [];
				for (var j = 0; j < participants.length; j++) {
					var data = {
						key: participants[j].id,
						title: participants[j].name,
						description: participants[j].code

					};
					mockData.push(data);
				}
				assignList[_i].mockData = mockData;
			}
			var selectKey = [];
			var _state2 = this.state,
			    activeKey = _state2.activeKey,
			    selectedItem = _state2.selectedItem;

			for (var i = 0; i < selectedItem.length; i++) {
				if (selectedItem[i].activeKey == activeKey) {
					// selectKey = selectedItem[i].targetKeys
					// console.log(selectedItem[i].activeKey);
					if (typeof selectedItem[i].targetKeys != "undefined") {
						assignList[i].selectKey = selectedItem[i].targetKeys;
					} else {
						assignList[i].selectKey = [];
					}
				}
			}
			//console.log(selectKey);
			return _react2.default.createElement(
				'div',
				null,
				_react2.default.createElement(
					YYModal,
					{ ref: 'modal',
						visible: this.state.visible,
						closable: false,

						width: 554,
						title: '\u6307\u6D3E\u4E0B\u4E00\u4E2A\u73AF\u8282\u7684\u53C2\u4E0E\u8005',
						footer: [_react2.default.createElement(
							YYButton,
							{ key: 'back', type: 'ghost', onClick: this.close },
							'\u8FD4 \u56DE'
						), _react2.default.createElement(
							YYButton,
							{ key: 'submit', type: 'primary', disabled: this.state.comfirmAble, onClick: this.comfirm },
							'\u786E \u5B9A'
						)] },
					_react2.default.createElement(
						_antd.Tabs,
						{
							className: 'yybpm-approve-user',
							ref: 'tabs',
							type: 'card',
							onChange: this.onChangeTab
						},
						assignList.map(function (pane) {
							return _react2.default.createElement(
								TabPane,
								{ tab: pane.activityName, key: pane.activityId },
								_react2.default.createElement(_antd.Transfer, {
									className: 'yyui-bpm-custom',
									dataSource: pane.mockData,
									listStyle: {
										width: 250,
										height: 300
									},
									'data-id': pane.activityId,
									titles: titles,
									targetKeys: pane.selectKey,
									onChange: _this2.handleChange,
									render: _this2.renderItem })
							);
						})
					)
				)
			);
		}
	}]);

	return YYApproveUser;
}(_react2.default.Component);

YYApproveUser.propTypes = propTypes;
module.exports = (0, _reactRedux.connect)(mapStateToProps)(YYApproveUser);