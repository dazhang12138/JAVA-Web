'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.bpmPreApproveQuery = bpmPreApproveQuery;
exports.doSubmit = doSubmit;
exports.bpmApprove = bpmApprove;
exports.bpmPrereject = bpmPrereject;
exports.bpmDelegate = bpmDelegate;
exports.bpmReject = bpmReject;
exports.bpmViewapproveal = bpmViewapproveal;
exports.bpmSingleViewapproveal = bpmSingleViewapproveal;
exports.bpmTodoTask = bpmTodoTask;
exports.bpmDoneTask = bpmDoneTask;
exports.bpmMySubmitTask = bpmMySubmitTask;
exports.bpmUnApprove = bpmUnApprove;
exports.bpmDisApprove = bpmDisApprove;
exports.bpmCallBack = bpmCallBack;
exports.bpmGetUser = bpmGetUser;
exports.queryAssignUser = queryAssignUser;
exports.queryStartAssignUser = queryStartAssignUser;
exports.getConfigList = getConfigList;
exports.getAssignByProckey = getAssignByProckey;

var _ajax = require('../url/ajax');

var _BPMURL = require('../url/BPMURL');

var _BPMURL2 = _interopRequireDefault(_BPMURL);

var _ActionTypes = require('../constants/ActionTypes');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var defaultUrl = 'http://60.205.12.0:81';

//审批前查询
function bpmPreApproveQuerySuccess(data) {
	return {
		type: _ActionTypes.BPM_PREAPPROVEQUERY_SUCCESS,
		data: data
	};
}
function bpmPreApproveQueryFail(flag) {
	return {
		type: _ActionTypes.BPM_PREAPPROVEQUERY_ERROR,
		flag: flag
	};
}
function bpmPreApproveQuery(serUrl, data) {
	var url = serUrl != null && serUrl != "" ? serUrl : defaultUrl;
	return function (dispatch) {
		(0, _ajax.ajax)({
			method: 'POST',
			url: url + _BPMURL2.default.BPM_PREAPPROVEQUERY,
			send: data,
			type: 'json',
			success: function success(data) {
				return dispatch(bpmPreApproveQuerySuccess(data));
			},
			error: function error(data) {
				return dispatch(bpmPreApproveQueryFail("查询出错"));
			}
		});
	};
}
//提交
function doSubmitSuccess(data) {
	return {
		type: _ActionTypes.BPM_SUBMIT_SUCCESS,
		data: data
	};
}
function doSubmitFail(flag) {
	return {
		type: _ActionTypes.BPM_SUBMIT_ERROR,
		flag: flag
	};
}
function doSubmit(serUrl, data) {
	var url = serUrl != null && serUrl != "" ? serUrl : defaultUrl;
	return function (dispatch) {
		(0, _ajax.ajax)({
			method: 'POST',
			url: url + _BPMURL2.default.BPM_SUBMIT,
			send: data,
			type: 'json',
			success: function success(data) {
				return dispatch(doSubmitSuccess(data));
			},
			error: function error(data) {
				return dispatch(doSubmitFail("获取失败出错"));
			}
		});
	};
}
//审批同意和不同意但继续
function bpmApproveSuccess(data) {
	return {
		type: _ActionTypes.BPM_APPROVE_SUCCESS,
		data: data
	};
}
function bpmApproveFail(flag) {
	return {
		type: _ActionTypes.BPM_APPROVE_SUCCESS,
		flag: flag
	};
}
function bpmApprove(serUrl, data) {
	var url = serUrl != null && serUrl != "" ? serUrl : defaultUrl;
	return function (dispatch) {
		(0, _ajax.ajax)({
			method: 'POST',
			url: url + _BPMURL2.default.BPM_APPROVE,
			send: data,
			type: 'json',
			success: function success(data) {
				return dispatch(bpmApproveSuccess(data));
			},
			error: function error(data) {
				return dispatch(bpmApproveFail("审批出错"));
			}
		});
	};
}

//驳回前查询
function bpmPrerejectSuccess(data) {
	return {
		type: _ActionTypes.BPM_PREREJECT_SUCCESS,
		data: data
	};
}
function bpmPrerejectFail(flag) {
	return {
		type: _ActionTypes.BPM_PREREJECT_ERROR,
		flag: flag
	};
}
function bpmPrereject(serUrl, data) {
	var url = serUrl != null && serUrl != "" ? serUrl : defaultUrl;
	return function (dispatch) {
		(0, _ajax.ajax)({
			method: 'POST',
			url: url + _BPMURL2.default.BPM_PREREJECT,
			send: data,
			type: 'json',
			success: function success(data) {
				return dispatch(bpmPrerejectSuccess(data));
			},
			error: function error(data) {
				return dispatch(bpmPrerejectFail("驳回前查询出错"));
			}
		});
	};
}
//改派
function bpmDelegeteSuccess(data) {
	return {
		type: _ActionTypes.BPM_DELEGATETASK_SUCCESS,
		data: data
	};
}
function bpmDelegeteFail(flag) {
	return {
		type: _ActionTypes.BPM_DELEGATETASK_ERROR,
		flag: flag
	};
}
function bpmDelegate(serUrl, data) {
	var url = serUrl != null && serUrl != "" ? serUrl : defaultUrl;
	return function (dispatch) {
		(0, _ajax.ajax)({
			method: 'POST',
			url: url + _BPMURL2.default.BPM_DELEGATE,
			send: data,
			type: 'json',
			success: function success(data) {
				return dispatch(bpmDelegeteSuccess(data));
			},
			error: function error(data) {
				return dispatch(bpmDelegeteFail("改派出错！"));
			}
		});
	};
}
//驳回
function bpmRejectSuccess(data) {
	return {
		type: _ActionTypes.BPM_REJECT_SUCCESS,
		data: data
	};
}
function bpmRejectFail(flag) {
	return {
		type: _ActionTypes.BPM_REJECT_ERROR,
		flag: flag
	};
}
function bpmReject(serUrl, data) {
	var url = serUrl != null && serUrl != "" ? serUrl : defaultUrl;
	return function (dispatch) {
		(0, _ajax.ajax)({
			method: 'POST',
			url: url + _BPMURL2.default.BPM_REJECT,
			send: data,
			type: 'json',
			success: function success(data) {
				return dispatch(bpmRejectSuccess(data));
			},
			error: function error(data) {
				return dispatch(bpmRejectFail("驳回出错"));
			}
		});
	};
}

//查看审批流
function bpmViewapprovealSuccess(data) {
	return {
		type: _ActionTypes.BPM_VIEWAPPROVEAL_SUCCESS,
		data: data
	};
}
function bpmViewapprovealFail(flag) {
	return {
		type: _ActionTypes.BPM_VIEWAPPROVEAL_ERROR,
		flag: flag
	};
}
function bpmViewapproveal(serUrl, data) {
	var url = serUrl != null && serUrl != "" ? serUrl : defaultUrl;
	return function (dispatch) {
		(0, _ajax.ajax)({
			method: 'POST',
			url: url + _BPMURL2.default.BPM_VIEWAPPROVEAL,
			send: data,
			type: 'json',
			success: function success(data) {
				return dispatch(bpmViewapprovealSuccess(data));
			},
			error: function error(data) {
				return dispatch(bpmViewapprovealFail("查看出错"));
			}
		});
	};
}
function bpmSingleViewapproveal(serUrl, data) {
	var url = serUrl != null && serUrl != "" ? serUrl : defaultUrl;
	return function (dispatch) {
		(0, _ajax.ajax)({
			method: 'POST',
			url: url + _BPMURL2.default.BPM_New_VIEWAPPROVEAL,
			send: data,
			type: 'json',
			success: function success(data) {
				return dispatch(bpmViewapprovealSuccess(data));
			},
			error: function error(data) {
				return dispatch(bpmViewapprovealFail("查看出错"));
			}
		});
	};
}
//查询待办流程任务
function bpmTodoTaskSuccess(data) {
	return {
		type: _ActionTypes.BPM_TODOTASK_SUCCESS,
		data: data
	};
}
function bpmTodoTaskFail(flag) {
	return {
		type: _ActionTypes.BPM_TODOTASK_ERROR,
		flag: flag
	};
}
function bpmTodoTask(serUrl, data) {
	var url = serUrl != null && serUrl != "" ? serUrl : defaultUrl;
	return function (dispatch) {
		(0, _ajax.ajax)({
			method: 'POST',
			url: url + _BPMURL2.default.BPM_TODOTASK,
			send: data,
			type: 'json',
			success: function success(data) {
				return dispatch(bpmTodoTaskSuccess(data));
			},
			error: function error(data) {
				return dispatch(bpmTodoTaskFail("查询待办流程任务出错"));
			}
		});
	};
}

//查询已办流程任务
function bpmDoneTaskSuccess(data) {
	return {
		type: _ActionTypes.BPM_DONETASK_SUCCESS,
		data: data
	};
}
function bpmDoneTaskFail(flag) {
	return {
		type: _ActionTypes.BPM_DONETASK_SUCCESS,
		flag: flag
	};
}
function bpmDoneTask(serUrl, data) {
	var url = serUrl != null && serUrl != "" ? serUrl : defaultUrl;
	return function (dispatch) {
		(0, _ajax.ajax)({
			method: 'POST',
			url: url + _BPMURL2.default.BPM_DONETASK,
			send: data,
			type: 'json',
			success: function success(data) {
				return dispatch(bpmDoneTaskSuccess(data));
			},
			error: function error(data) {
				return dispatch(bpmDoneTaskFail("查询已办流程任务出错"));
			}
		});
	};
}

//查看我提交的
function bpmMySubmitTaskSuccess(data) {
	return {
		type: _ActionTypes.BPM_MYSUBMIT_SUCCESS,
		data: data
	};
}
function bpmMySubmitTaskFail(flag) {
	return {
		type: _ActionTypes.BPM_MYSUBMIT_ERROR,
		flag: flag
	};
}
function bpmMySubmitTask(serUrl, data) {
	var url = serUrl != null && serUrl != "" ? serUrl : defaultUrl;
	return function (dispatch) {
		(0, _ajax.ajax)({
			method: 'POST',
			url: url + _BPMURL2.default.BPM_MYSUBMIT,
			send: data,
			type: 'json',
			success: function success(data) {
				return dispatch(bpmMySubmitTaskSuccess(data));
			},
			error: function error(data) {
				return dispatch(bpmMySubmitTaskFail("查询已办流程任务出错"));
			}
		});
	};
}
//BPM弃审
function bpmUnApproveSuccess(flag) {
	return {
		type: _ActionTypes.BPM_UNAPPROVE_SUCCESS,
		flag: flag
	};
}
function bpmUnApproveFail(flag) {
	return {
		type: _ActionTypes.BPM_UNAPPROVE_ERROR,
		flag: flag
	};
}
function bpmUnApprove(serUrl, data) {
	var url = serUrl != null && serUrl != "" ? serUrl : defaultUrl;
	return function (dispatch) {
		(0, _ajax.ajax)({
			method: 'POST',
			url: url + _BPMURL2.default.BPM_UNAPPROVE,
			send: data,
			type: 'json',
			success: function success(data) {
				if (data.success) {
					return dispatch(bpmUnApproveSuccess(data.msg));
				} else {
					return dispatch(bpmUnApproveSuccess(data.msg));
				}
			},
			error: function error(data) {
				return dispatch(bpmUnApproveFail("弃审出错"));
			}
		});
	};
}
//不同意且退回
function bpmDisApproveSuccess(data) {
	return {
		type: _ActionTypes.BPM_DISAPPROVE_SUCCESS,
		data: data
	};
}
function bpmDisApproveFail(flag) {
	return {
		type: _ActionTypes.BPM_DISAPPROVE_ERROR,
		flag: flag
	};
}
function bpmDisApprove(serUrl, data) {
	var url = serUrl != null && serUrl != "" ? serUrl : defaultUrl;
	return function (dispatch) {
		(0, _ajax.ajax)({
			method: 'POST',
			url: url + _BPMURL2.default.BPM_DISAPPROVE,
			send: data,
			type: 'json',
			success: function success(data) {
				return dispatch(bpmDisApproveSuccess(data));
			},
			error: function error(data) {
				return dispatch(bpmDisApproveFail("退回出错！"));
			}
		});
	};
}
//收回
function bpmCallBackSuccess(data) {
	return {
		type: _ActionTypes.BPM_CALLBACK_SUCCESS,
		data: data
	};
}
function bpmCallBackFail(flag) {
	return {
		type: _ActionTypes.BPM_CALLBACK_ERROR,
		flag: flag
	};
}
function bpmCallBack(serUrl, data) {
	var url = serUrl != null && serUrl != "" ? serUrl : defaultUrl;
	return function (dispatch) {
		(0, _ajax.ajax)({
			method: 'POST',
			url: url + _BPMURL2.default.BPM_CALLBACK,
			send: data,
			type: 'json',
			success: function success(data) {
				return dispatch(bpmCallBackSuccess(data));
			},
			error: function error(data) {
				return dispatch(bpmCallBackFail("收回出错"));
			}
		});
	};
}
//获取登录用户信息
function bpmGetUserSuccess(data) {
	return {
		type: _ActionTypes.BPM_GETUSER_SUCCESS,
		data: data
	};
}
function bpmGetUserFail(flag) {
	return {
		type: _ActionTypes.BPM_GETUSER_ERROR,
		flag: flag
	};
}
function bpmGetUser(serUrl, data) {
	var url = serUrl != null && serUrl != "" ? serUrl : defaultUrl;
	return function (dispatch) {
		(0, _ajax.ajax)({
			method: 'POST',
			url: url + _BPMURL2.default.BPM_GETUSER,
			send: data,
			type: 'json',
			success: function success(data) {
				return dispatch(bpmGetUserSuccess(data));
			},
			error: function error(data) {
				return dispatch(bpmGetUserFail("获取失败出错"));
			}
		});
	};
}

//获取审批指派用户信息
function queryAssignUserSuccess(data) {
	return {
		type: _ActionTypes.BPM_APPROVEASSIGNUSER_SUCCESS,
		data: data
	};
}
function queryAssignUserFail(flag) {
	return {
		type: _ActionTypes.BPM_APPROVEASSIGNUSER_ERROR,
		flag: flag
	};
}
function queryAssignUser(serUrl, data) {
	var url = serUrl != null && serUrl != "" ? serUrl : defaultUrl;
	return function (dispatch) {
		(0, _ajax.ajax)({
			method: 'POST',
			url: url + _BPMURL2.default.BPM_APPROVEASSIGNUSER,
			send: data,
			type: 'json',
			success: function success(data) {
				return dispatch(queryAssignUserSuccess(data));
			},
			error: function error(data) {
				return dispatch(queryAssignUserFail("获取失败出错"));
			}
		});
	};
}
//获取审批指派用户信息
function queryStartAssignUserSuccess(data) {
	return {
		type: _ActionTypes.BPM_STARTASSIGNUSER_SUCCESS,
		data: data
	};
}
function queryStartAssignUserFail(flag) {
	return {
		type: _ActionTypes.BPM_STARTASSIGNUSER_ERROR,
		flag: flag
	};
}
function queryStartAssignUser(serUrl, data) {
	var url = serUrl != null && serUrl != "" ? serUrl : defaultUrl;
	return function (dispatch) {
		(0, _ajax.ajax)({
			method: 'POST',
			url: url + _BPMURL2.default.BPM_STARTASSIGNUSER,
			send: data,
			type: 'json',
			success: function success(data) {
				return dispatch(queryStartAssignUserSuccess(data));
			},
			error: function error(data) {
				return dispatch(queryStartAssignUserFail("获取失败出错"));
			}
		});
	};
}
//获取审批指派用户信息
function getConfigListSuccess(data) {
	return {
		type: _ActionTypes.BPM_GETCONFIGLIST_SUCCESS,
		data: data
	};
}
function getConfigListFail(flag) {
	return {
		type: _ActionTypes.BPM_GETCONFIGLIST_ERROR,
		flag: flag
	};
}
function getConfigList(serUrl, data) {
	var url = serUrl != null && serUrl != "" ? serUrl : defaultUrl;
	return function (dispatch) {
		(0, _ajax.ajax)({
			method: 'GET',
			url: url + _BPMURL2.default.BPM_GETCONFIGLIST,
			query: data,
			type: 'json',
			success: function success(data) {
				return dispatch(getConfigListSuccess(data));
			},
			error: function error(data) {
				return dispatch(getConfigListFail("获取失败出错"));
			}
		});
	};
}
//获取审批指派用户信息
function getAssignByProckeySuccess(data) {
	return {
		type: _ActionTypes.BPM_STARTASSIGNUSER_SUCCESS,
		data: data
	};
}
function getAssignByProckeyFail(flag) {
	return {
		type: _ActionTypes.BPM_STARTASSIGNUSER_ERROR,
		flag: flag
	};
}
function getAssignByProckey(serUrl, data) {
	var url = serUrl != null && serUrl != "" ? serUrl : defaultUrl;
	return function (dispatch) {
		(0, _ajax.ajax)({
			method: 'POST',
			url: url + _BPMURL2.default.BPM_GETASSIGNBYPROCKEY,
			send: data,
			type: 'json',
			success: function success(data) {
				return dispatch(getAssignByProckeySuccess(data));
			},
			error: function error(data) {
				return dispatch(getAssignByProckeyFail("获取失败出错"));
			}
		});
	};
}