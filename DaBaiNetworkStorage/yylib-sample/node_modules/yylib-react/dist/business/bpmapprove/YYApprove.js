'use strict';

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactRedux = require('react-redux');

require('./bpm/styles/less/bpmtask.less');

var _antd = require('antd');

var _reactCustomScrollbars = require('react-custom-scrollbars');

var _bpm = require('./bpm/actions/bpm');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _require = require('yylib-ui'),
    YYRadioGroup = _require.YYRadioGroup,
    YYRadio = _require.YYRadio;

var _require2 = require('yylib-ui'),
    YYReferInput = _require2.YYReferInput,
    YYButton = _require2.YYButton;

var ajax = require('yylib-utils/ajax');
var YYViewApprove = require('./YYViewApprove');
var ViewRecord = require('./ViewRecord');
var YYApproveUser = require('./YYApproveUser');
var FormItem = _antd.Form.Item;
var Option = _antd.Select.Option;
var OptGroup = _antd.Select.OptGroup;
var RadioGroup = _antd.Radio.Group;

var USERID = null;

var mapStateToProps = function mapStateToProps(state) {

	return {
		bpm: state.bpm
	};
};

var propTypes = {
	bpmObject: _react2.default.PropTypes.object,
	dispatch: _react2.default.PropTypes.func
};

var YYApprove = function (_React$Component) {
	_inherits(YYApprove, _React$Component);

	function YYApprove(props) {
		_classCallCheck(this, YYApprove);

		var _this2 = _possibleConstructorReturn(this, (YYApprove.__proto__ || Object.getPrototypeOf(YYApprove)).call(this, props));

		_this2.doApprove = _this2.doApprove.bind(_this2);
		_this2.cancel = _this2.cancel.bind(_this2);
		_this2.radioOnChange = _this2.radioOnChange.bind(_this2);
		_this2.operateHistory = _this2.operateHistory.bind(_this2);
		_this2.showUserRef = _this2.showUserRef.bind(_this2);
		_this2.closeModal = _this2.closeModal.bind(_this2);
		_this2.selectData = _this2.selectData.bind(_this2);
		_this2.onChangeUser = _this2.onChangeUser.bind(_this2);
		_this2.confirm = _this2.confirm.bind(_this2);
		_this2.closeHistory = _this2.closeHistory.bind(_this2);
		_this2.openBill = _this2.openBill.bind(_this2);
		_this2.viewRecord = _this2.viewRecord.bind(_this2);
		_this2.closeRecord = _this2.closeRecord.bind(_this2);
		_this2.beforeApprove = _this2.beforeApprove.bind(_this2);
		_this2.viewAssign = _this2.viewAssign.bind(_this2);
		_this2.closeAssign = _this2.closeAssign.bind(_this2);
		_this2.comfirmAssign = _this2.comfirmAssign.bind(_this2);
		_this2.state = {
			opinion: 1,
			customTip: '',
			bill: [],
			assign: null,
			showView: false,
			rejectAble: false,
			assignAble: false,
			ViewRecord: false,
			ViewAssign: false,
			inPower: false,
			comfirmable: false,
			placeholder: "请输入审批语",
			billId: props.bill.billId

		};
		return _this2;
	}

	_createClass(YYApprove, [{
		key: 'selectData',
		value: function selectData(value, option) {
			this.setState({ activityId: value, selectOption: option.refs });
		}
	}, {
		key: 'radioOnChange',
		value: function radioOnChange(e) {
			var opinion = e.target.value;
			this.setState({
				opinion: opinion
			});
		}
	}, {
		key: 'inputOnChange',
		value: function inputOnChange(e) {
			this.setState({
				customTip: e.target.value
			});
		}

		//初始化渲染执行之后立刻调用一次

	}, {
		key: 'componentDidMount',
		value: function componentDidMount() {
			var _props = this.props,
			    bill = _props.bill,
			    showApprove = _props.showApprove,
			    userId = _props.userId,
			    orgId = _props.orgId,
			    serUrl = _props.serUrl,
			    refUrl = _props.refUrl,
			    viewBench = _props.viewBench;

			var _this = this;
			var bpmId = bill.bpmId ? bill.bpmId : null;
			var billId = bill.billId;

			if (bpmId == null || bpmId == "") {
				var url = serUrl + "/icop-bpmcenter-web/bpm/getBpmId";
				var params = {
					billId: billId
				};
				ajax.getJSON(url, params, null, null, function (data) {
					if (data != null && data.status == 200) {
						var backData = eval("(" + data.text + ")");
						var procinstId = backData.bpmId;
						_this.setState({
							bpmId: procinstId
						});
						bpmId = procinstId;
						var query = { userId: userId, bpmId: bpmId };
						var dispatch = _this.props.dispatch;

						dispatch((0, _bpm.bpmPrereject)(serUrl, query));
					}
				});
			} else {
				var data = { userId: userId, bpmId: bpmId };
				var dispatch = this.props.dispatch;

				dispatch((0, _bpm.bpmPrereject)(serUrl, data));
			}
			this.setState({
				bill: bill,
				showApprove: showApprove,
				userId: userId,
				bpmId: bpmId,
				orgId: orgId,
				serUrl: serUrl,
				refUrl: refUrl
			});
			if (viewBench) {
				this.setState({
					viewBench: viewBench
				});
			}
		}

		//数据更新后通知此方法

	}, {
		key: 'componentWillReceiveProps',
		value: function componentWillReceiveProps(nextProps) {
			var bpm = nextProps.bpm;


			var reject = bpm.data.rejectAble != null ? bpm.data.rejectAble : false;
			if (!reject) {
				this.state.opinion = 3;
			} else {
				this.state.opinion = 1;
			}
			if (bpm && bpm.type) {
				switch (bpm.type) {
					case 'bpmapprove':
						_antd.message.info(bpm.data.msg);this.excuteResult(bpm.data);break;
					case 'bpmdelegate':
						_antd.message.info(bpm.data.msg);this.excuteResult(bpm.data);break;
					case 'bpmdisapprove':
						_antd.message.info(bpm.data.msg);this.excuteResult(bpm.data);break;
					default:
						break;
				}
			}
		}
	}, {
		key: 'excuteResult',
		value: function excuteResult(data) {
			if (data) {
				if (data.success == true || data.success == "true") {
					this.confirm(data);
				} else {
					this.setState({
						comfirmable: false
					});
					return;
				}
			}
		}
		//显示用户参照

	}, {
		key: 'showUserRef',
		value: function showUserRef() {
			this.setState({ comModal: true });
		}
	}, {
		key: 'closeModal',
		value: function closeModal() {
			this.setState({ comModal: false });
		}
	}, {
		key: 'beforeApprove',
		value: function beforeApprove(e) {
			var assignAble = this.props.bpm.data.assignAble;

			var opinion = this.state.opinion ? this.state.opinion : null; //审批意见
			if (assignAble != null && assignAble == true && (opinion == 1 || opinion == 3)) {
				this.viewAssign();
			} else {
				var assign = [];
				this.doApprove(assign);
			}
		}

		//审批操作

	}, {
		key: 'doApprove',
		value: function doApprove(assign) {
			var userId = this.state.userId; //登录用户ID
			var bill = {};
			bill = this.state.bill ? this.state.bill : null; //单据信息
			var changeKey = USERID; //改派的用户Id
			var bpmId = null;
			if (bill) {
				bpmId = bill.bpmId ? bill.bpmId : null; //流程实例ID
			}

			var opinion = this.state.opinion ? this.state.opinion : null; //审批意见
			var activityId = this.state.activityId ? this.state.activityId : null; //不同意且退回，退回到的哪里
			var opinionContent = null;
			if (opinion == 1) {
				opinionContent = "同意";
			} else if (opinion == 2) {
				opinionContent = "不同意且退回";
				if (activityId == null || activityId == '') {
					_antd.message.info("请选择需要退回的节点！");
					return;
				}
			} else if (opinion == 3) {
				opinionContent = "审核";
			} else if (opinion == 4) {
				opinionContent = "改派";
				if (!changeKey) {
					_antd.message.error("请选择需要改派处！");
					return;
				}
			} else if (opinion == 5) {
				opinionContent = "加签";
			}
			var comment = this.state.customTip ? this.state.customTip : "";
			if (comment == "") {
				comment = opinionContent;
			}
			var approveObject = [];
			var assignAble = false;
			if (assign != null && assign.length > 0) {
				assignAble = true;
			}
			approveObject = {
				userId: userId,
				bill: bill,
				bpmId: bpmId,
				approveType: opinionContent,
				comment: comment,
				delegateUser: changeKey,
				activityId: activityId,
				assignAble: assignAble,
				assign: assign
			}; //回调数据
			this.onBpmApprove(approveObject);
			this.setState({
				comfirmable: true
			});
		}
		//提交审批

	}, {
		key: 'onBpmApprove',
		value: function onBpmApprove(data) {
			var dispatch = this.props.dispatch;
			var serUrl = this.state.serUrl;

			if (data.approveType == "同意") {
				dispatch((0, _bpm.bpmApprove)(serUrl, data));
			} else if (data.approveType == "改派") {
				dispatch((0, _bpm.bpmDelegate)(serUrl, data));
			} else if (data.approveType == "不同意且退回") {
				dispatch((0, _bpm.bpmDisApprove)(serUrl, data));
			} else if (data.approveType == "审核") {
				dispatch((0, _bpm.bpmApprove)(serUrl, data));
			} else if (data.approveType == "加签") {
				//dispatch(bpmDelegate(serUrl, data));
				console.log("敬请期待……");
			}
			//this.cancel();
		}

		//取消审批

	}, {
		key: 'confirm',
		value: function confirm(data) {
			this.props.closeApprove(data);
		}
	}, {
		key: 'cancel',
		value: function cancel(e) {
			var data = { method: "cancel", type: "取消" };
			if (this.props.closeApprove) {
				this.props.closeApprove(data);
			}
		}
	}, {
		key: 'onChangeUser',
		value: function onChangeUser(e, b) {
			if (e && e.id && e.name) {
				USERID = e.id;
			} else {
				_antd.message.info("未选中用户！");
			}
		}
		//审批历史

	}, {
		key: 'operateHistory',
		value: function operateHistory(e) {
			this.setState({
				showView: true
			});
		}
	}, {
		key: 'openBill',
		value: function openBill(e) {
			var bill = this.state.bill;

			this.props.onOpenBill(bill.formurl);
		}
	}, {
		key: 'viewRecord',
		value: function viewRecord() {
			this.setState({
				ViewRecord: true
			});
		}
	}, {
		key: 'closeRecord',
		value: function closeRecord(e) {
			this.setState({
				ViewRecord: false
			});
		}
	}, {
		key: 'closeHistory',
		value: function closeHistory(e) {
			this.setState({
				showView: false
			});
		}
	}, {
		key: 'viewAssign',
		value: function viewAssign() {
			this.setState({
				ViewAssign: true,
				comfirmable: true
			});
		}
	}, {
		key: 'closeAssign',
		value: function closeAssign() {
			this.setState({
				ViewAssign: false,
				comfirmable: false
			});
		}
	}, {
		key: 'comfirmAssign',
		value: function comfirmAssign(assign) {
			this.closeAssign();
			this.setState({
				comfirmable: true
			});
			this.doApprove(assign);
		}
	}, {
		key: 'render',
		value: function render() {
			var selectData = null;
			var rejectData = null;
			var inPower = this.state.inPower;
			var addsignAble = false;
			var rejectAble = false;
			var maskLayer = "";
			var content = "";
			if (this.props.bpm && this.props.bpm.data && this.props.bpm.data.data) {
				rejectData = this.props.bpm.data.data;
				inPower = this.props.bpm.data.inPower;
				if (!inPower) {
					maskLayer = "yyui-bpm-approve-maskLayer";
					content = "yyui-bpm-content";
				} else {
					maskLayer = "";
				}
				addsignAble = this.props.bpm.data.addsignAble != null ? this.props.bpm.data.addsignAble : false;
				rejectAble = this.props.bpm.data.rejectAble != null ? this.props.bpm.data.rejectAble : false;
			}
			if (rejectData != null && rejectData.array != null) {
				var rejectArray = rejectData.array;
				selectData = [_react2.default.createElement(
					'div',
					{ className: 'yyui-bpm-approve-reject' },
					_react2.default.createElement(
						'div',
						null,
						'\u6D41\u7A0B\u5C06\u9000\u56DE\u5230'
					),
					_react2.default.createElement(
						'div',
						{ className: 'yyui-bpm-approve-reject-text yyui-bpm-approve-reject' },
						_react2.default.createElement(
							_antd.Select,
							{ id: 'select', onSelect: this.selectData, style: { width: 265 } },
							_react2.default.createElement(
								Option,
								{ value: "提交人" },
								'\u63D0\u4EA4\u4EBA'
							),
							rejectArray.map(function (s, i) {
								return _react2.default.createElement(
									Option,
									{ value: s.activityId },
									s.activityName
								);
							})
						)
					),
					_react2.default.createElement(
						'div',
						{ className: 'yyui-bpm-approve-reject-text' },
						'\u5904'
					)
				)];
			} else {
				selectData = [_react2.default.createElement(
					'div',
					{ className: 'yyui-bpm-approve-reject' },
					_react2.default.createElement(
						'div',
						{ className: 'yyui-bpm-approve-reject-text' },
						'\u6D41\u7A0B\u5C06\u9000\u56DE\u5230'
					),
					_react2.default.createElement(
						'div',
						{ className: 'yyui-bpm-approve-reject-text' },
						_react2.default.createElement(
							_antd.Select,
							{ id: 'select', style: { width: 265 }, onSelect: this.selectData },
							_react2.default.createElement(
								Option,
								{ value: "提交人" },
								'\u63D0\u4EA4\u4EBA'
							)
						)
					),
					_react2.default.createElement(
						'div',
						{ className: 'yyui-bpm-approve-reject-text' },
						'\u5904'
					)
				)];
			}
			var opinion = this.state.opinion;
			var radioText = null;
			switch (opinion) {
				case 1:
					radioText = [_react2.default.createElement(
						'div',
						null,
						'\u6D41\u7A0B\u5C06\u7EE7\u7EED'
					)];break;
				case 2:
					radioText = selectData;break;
				case 3:
					radioText = [_react2.default.createElement(
						'div',
						null,
						'\u6D41\u7A0B\u7EE7\u7EED\u6D41\u8F6C,\u672C\u9879\u4E00\u822C\u5728\u4F1A\u7B7E\u65F6\u4F7F\u7528'
					)];break;
				case 4:
					radioText = [_react2.default.createElement(
						'div',
						{ className: 'yyui-bpm-approve-delegate' },
						_react2.default.createElement(
							'div',
							{ className: 'yyui-bpm-delegate-userRef' },
							'\u5F53\u524D\u4EFB\u52A1\u6539\u5728'
						),
						_react2.default.createElement(
							'div',
							{ className: 'yyui-bpm-delegate-userRef yyui-bpm-approve-userRef' },
							_react2.default.createElement(YYReferInput, {
								serverUrl: this.state.refUrl,
								often: true,
								multiselect: false,
								onChange: this.onChangeUser,
								refinfokey: '00023' })
						),
						_react2.default.createElement(
							'div',
							{ className: 'delegate-userRef' },
							'\u5904'
						)
					)];break;
				case 5:
					radioText = [_react2.default.createElement(
						'div',
						null,
						'\u5F53\u524D\u4EFB\u52A1\u540E\u5C06\u589E\xA0',
						_react2.default.createElement('input', { type: 'text' }),
						'\xA0\u8FDB\u884C\u5904\u7406'
					)];break;
				default:
					radioText = [_react2.default.createElement(
						'div',
						null,
						'opinion'
					)];break;
			}
			var viewHistory = _react2.default.createElement(
				'div',
				{ className: 'yyui-bpm-viewHistory' },
				this.state.showView ? _react2.default.createElement(YYViewApprove, {
					showViewApprove: this.state.showView,
					userId: this.state.userId,
					serUrl: this.state.serUrl,
					bpmId: this.state.bpmId,
					billId: this.state.billId,
					closeMethod: this.closeHistory }) : null
			);
			var viewAssign = this.state.ViewAssign ? _react2.default.createElement(YYApproveUser, { key: 'bpmAssign',
				visible: this.state.ViewAssign,
				type: "approve",
				serUrl: this.state.serUrl,
				orgId: this.state.orgId,
				bpmId: this.state.bpmId,
				userId: this.state.userId,
				close: this.closeAssign,
				comfirm: this.comfirmAssign }) : null;
			var formItemLayout = {
				labelCol: { span: 4 },
				wrapperCol: { span: 19 }
			};

			var title = [_react2.default.createElement(
				'div',
				null,
				'\u5BA1\u6279'
			)];
			var bill = this.state.bill;
			if (this.state.viewBench) {
				title = [_react2.default.createElement(
					_antd.Row,
					null,
					_react2.default.createElement(
						_antd.Col,
						{ span: 8 },
						'\u5BA1\u6279'
					),
					_react2.default.createElement(
						_antd.Col,
						{ span: 8, className: 'yyui-bpm-title-proinsname', title: bill.processInsName },
						bill.processInsName
					),
					_react2.default.createElement(
						_antd.Col,
						{ span: 8, className: 'yyui-bpm-title-recvtime' },
						bill.recvTime
					)
				)];
			}
			return _react2.default.createElement(
				'div',
				{ className: 'yyui-bpm-main' },
				viewHistory,
				viewAssign,
				_react2.default.createElement(
					_antd.Modal,
					{ style: { top: 50 },
						title: title,
						width: 630,
						visible: this.state.showApprove,
						closable: false,
						className: 'yyui-bpm-main',
						footer: [_react2.default.createElement(
							'div',
							{ className: 'yyui-bpm-footBtn' },
							_react2.default.createElement(
								'div',
								{ className: 'yyui-bpm-viewHistory' },
								_react2.default.createElement(
									'div',
									{ className: 'yyui-bpm-viewHistory-btn' },
									_react2.default.createElement(
										YYButton,
										{ onClick: this.operateHistory, type: 'error', icon: 'info-circle-o' },
										'\u67E5\u770B\u5BA1\u6279\u8BB0\u5F55'
									)
								),
								this.state.viewBench ? _react2.default.createElement(
									'div',
									{ className: 'yyui-bpm-viewHistory-btn' },
									_react2.default.createElement(
										YYButton,
										{ onClick: this.openBill, type: 'error', icon: 'info-circle-o' },
										'\u5355\u636E\u8BE6\u60C5'
									)
								) : null
							),
							_react2.default.createElement(
								'div',
								{ className: 'yyui-bpm-operateBtn' },
								_react2.default.createElement(
									'div',
									{ className: 'yyui-bpm-cancel' },
									_react2.default.createElement(
										YYButton,
										{ onClick: this.cancel, 'data-id': 'cancel', type: 'default' },
										'\u53D6\u6D88'
									)
								),
								_react2.default.createElement(
									'div',
									{ className: 'yyui-bpm-comfirm' },
									inPower ? _react2.default.createElement(
										YYButton,
										{ onClick: this.beforeApprove, disabled: this.state.comfirmable, type: 'primary' },
										'\u786E\u5B9A'
									) : _react2.default.createElement(
										YYButton,
										{ onClick: this.beforeApprove, type: 'primary', disabled: true },
										'\u786E\u5B9A'
									)
								)
							)
						)] },
					_react2.default.createElement(
						'div',
						{ className: content },
						_react2.default.createElement(
							_reactCustomScrollbars.Scrollbars,
							{ style: { height: 300 } },
							_react2.default.createElement(
								_antd.Form,
								{ horizontal: true, form: this.props.form, className: 'yyui-bpm-bpmtask-form' },
								_react2.default.createElement(
									_antd.Row,
									null,
									_react2.default.createElement(
										_antd.Col,
										{ span: '23' },
										_react2.default.createElement(
											FormItem,
											_extends({ className: 'yyui-bpm-form-item'

											}, formItemLayout),
											_react2.default.createElement(
												YYRadioGroup,
												{ defaultValue: this.state.opinion, onChange: this.radioOnChange, value: this.state.opinion },
												_react2.default.createElement(
													'span',
													null,
													'\u5BA1\u6279\u610F\u89C1\uFF1A'
												),
												_react2.default.createElement(
													YYRadio,
													{ value: 1, disabled: !rejectAble },
													'\u540C\u610F'
												),
												_react2.default.createElement(
													YYRadio,
													{ value: 2, disabled: !rejectAble },
													'\u4E0D\u540C\u610F\u4E14\u9000\u56DE'
												),
												_react2.default.createElement(
													YYRadio,
													{ value: 3, disabled: rejectAble },
													'\u5BA1\u6838'
												),
												_react2.default.createElement(
													YYRadio,
													{ value: 4, disabled: !addsignAble },
													'\u6539\u6D3E'
												)
											)
										),
										_react2.default.createElement(
											'div',
											{ className: 'yyui-bpm-radioText' },
											radioText
										)
									)
								),
								_react2.default.createElement('hr', { className: 'yyui-bpm-cut-off' }),
								_react2.default.createElement(
									_antd.Row,
									null,
									_react2.default.createElement(
										_antd.Col,
										{ span: '23' },
										_react2.default.createElement(
											FormItem,
											_extends({ className: 'yyui-bpm-ant-form-item',
												id: 'control-textarea',
												label: '\u5BA1\u6279\u8BED\uFF1A'
											}, formItemLayout),
											_react2.default.createElement(_antd.Input, { type: 'textarea', placeholder: this.state.placeholder, value: this.state.customTip, onChange: this.inputOnChange.bind(this), className: 'yyui-bpm-textarea-input', rows: '5' })
										)
									)
								)
							)
						)
					),
					_react2.default.createElement('div', { className: maskLayer })
				)
			);
		}
	}]);

	return YYApprove;
}(_react2.default.Component);

;
//export default ApproveComp;
YYApprove.propTypes = propTypes;
module.exports = (0, _reactRedux.connect)(mapStateToProps)(YYApprove);