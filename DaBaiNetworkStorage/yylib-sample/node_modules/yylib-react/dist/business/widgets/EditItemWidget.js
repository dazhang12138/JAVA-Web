'use strict';

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

var React = require('react');

var _require = require('yylib-ui'),
    YYClass = _require.YYClass;

var PropTypes = YYClass.PropTypes;
var field = YYClass.field;

var uiMetaFieldsTableCol = require('yylib-ui/table/uiMetaFieldsTableCol');
var editItemMetaFields = [].concat(_toConsumableArray(uiMetaFieldsTableCol), [field('uisubtype', 'string', PropTypes.string, false, '单元格编辑态时的表单类型'), field('cellFill', false, PropTypes.bool, false, '是否支持单元格填充'), field('pattern', null, PropTypes.string, false, '对编辑内容进行验证的正则表达式'), field('patternMsg', null, PropTypes.string, false, '正则验证失败时给出的错误提示消息'), field('editTip', null, PropTypes.string, false, '编辑时的辅助提示信息')]);

//定义META
var uiMeta = {
    name: 'edititemw',
    fields: editItemMetaFields
};

var EditItemWidget = YYClass.create({
    uiMeta: uiMeta
});

module.exports = EditItemWidget;