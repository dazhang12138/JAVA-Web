'use strict';

var React = require('react');
var _ = require('lodash');

var _require = require('yylib-ui'),
    YYClass = _require.YYClass,
    YYButton = _require.YYButton;

var EnvUtils = require('yylib-utils/EnvUtils').default;
var field = YYClass.field;
var PropTypes = YYClass.PropTypes;
var AttachUpload = require('../../attach/AttachUpload');
var ADDR = require('../../BaseHost');

var uiMeta = {
    name: 'AttachUploadWidget',
    fields: [field('serverUrl', ADDR, PropTypes.string, true, '上传地址'), field('fileUrl', ADDR, PropTypes.string, true, ''), field('value', '', PropTypes.string, true, ''), field('allowFileExts', '', PropTypes.string, true, ''), field('billType', '', PropTypes.string, false, ''), field('uploadFailCallback', null, PropTypes.func, true, ''), field('uploadSuccessCallback', null, PropTypes.func, true, ''), field('title', '上传文件', PropTypes.string, true, '上传按钮文本'), field('sourceId', null, PropTypes.string, true, '单据id'), field('beforeUpload', null, PropTypes.string, true, ''), field('beforeDel', null, PropTypes.string, true, ''), field('enableUser', true, PropTypes.bool, false, '是否启用获取当前用户'), field('multiple', true, PropTypes.bool, false, '批量上传'), field('sourceType', '', PropTypes.string, false, '自定义类型标识'), field('btnType', '', PropTypes.oneOf(['primary', 'success', 'info', 'warning', 'error', '']), false, '设置按钮类型，可选值为 primary|success|info|warning|error 或者不设')
    // field('userId',ADDR,PropTypes.string,true,'上传地址'),
    // field('userName',ADDR,PropTypes.string,true,'上传地址'),
    ]
};
var AttachUploadWidget = YYClass.create({
    uiMeta: uiMeta,
    _getUser: function _getUser() {
        //if (this.props.enableUser) {
        //    return {
        //        userName:EnvUtils.getValue(EnvUtils.Keys.USER_NAME),
        //        userId: EnvUtils.getValue(EnvUtils.Keys.USER_ID)
        //    }
        //} else {
        //    return {userName:'', userId:''}
        //}
        //AttachUpload中以提供了实现
        return {};
    },
    _getParams: function _getParams() {
        var params = _.assign({}, this.props, this._getUser());
        return params;
    },
    render: function render() {
        var params = this._getParams();
        return React.createElement(AttachUpload, params);
    }
});

module.exports = AttachUploadWidget;