'use strict';

/**
 * Created by xiejunb on 2016/12/9.
 */
var ajax = require('yylib-utils/ajax');
var _ = require('lodash');
var applicationName = '/icop-share-web';
var ROOT_DEFDOC = '/defdoc/manage/';
var DataUtil = require('yylib-utils/DataUtil');
/**
 * 自定义档案查询工具类
 */
var DefDocUtil = {
    /**
     * 根据code，查询自定义档案列表
     * @param serverUrl             服务器url
     * @param defdocTypeCode        自定义档案 类型code
     * @param func                  回调func
     * @param orgId                 组织id
     * @param dataparams            自定义参数
     * @param isRefreshCache        是否刷新缓存 [true刷新,false不刷新]
     */
    findDefDocListByCode: function findDefDocListByCode(serverUrl, defdocTypeCode, func, orgId, dataparams, isRefreshCache) {
        if (isRefreshCache) {
            //刷新缓存
            ajax.getJSON(serverUrl + applicationName + ROOT_DEFDOC + 'getbydefdoclistcode', { defdoclistCode: defdocTypeCode, orgId: orgId, condition: JSON.stringify(dataparams) }, function (data) {
                //缓存
                DataUtil.setCache('YYEnumSelect_' + defdocTypeCode, data);
                DataUtil.setCache('YYEnumSelect_dataparams_' + defdocTypeCode, dataparams);
                if (_.isFunction(func)) {
                    func(data);
                }
            });
        } else {
            //不刷新缓存
            var dataparamsCache = DataUtil.getCache('YYEnumSelect_dataparams_' + defdocTypeCode);
            var isEqual = _.isEqual(dataparamsCache, dataparams);
            if (!isEqual) {
                //过滤条件改变
                ajax.getJSON(serverUrl + applicationName + ROOT_DEFDOC + 'getbydefdoclistcode', { defdoclistCode: defdocTypeCode, orgId: orgId, condition: JSON.stringify(dataparams) }, function (data) {
                    //缓存
                    DataUtil.setCache('YYEnumSelect_' + defdocTypeCode, data);
                    DataUtil.setCache('YYEnumSelect_dataparams_' + defdocTypeCode, dataparams);
                    if (_.isFunction(func)) {
                        func(data);
                    }
                });
            } else {
                //过滤条件不变
                var data = DataUtil.getCache('YYEnumSelect_' + defdocTypeCode);
                if (data) {
                    if (_.isFunction(func)) {
                        func(data);
                    }
                } else {
                    ajax.getJSON(serverUrl + applicationName + ROOT_DEFDOC + 'getbydefdoclistcode', { defdoclistCode: defdocTypeCode, orgId: orgId, condition: JSON.stringify(dataparams) }, function (data) {
                        //缓存
                        DataUtil.setCache('YYEnumSelect_' + defdocTypeCode, data);
                        if (_.isFunction(func)) {
                            func(data);
                        }
                    });
                }
            }
        }
    },
    /**
     * 根据id，查询自定义档案列表中的档案
     * @param serverUrl             服务器url
     * @param defdocTypeId          自定义档案 类型id
     * @param defdocId              自定义档案 列表项id
     * @param func
     */
    findDefDocListItemById: function findDefDocListItemById(serverUrl, defdocTypeId, defdocId, func) {
        ajax.getJSON(serverUrl + applicationName + ROOT_DEFDOC + 'edit', { defdoclistId: defdocTypeId, defdocId: defdocId }, function (data) {
            if (_.isFunction(func)) {
                func(data);
            }
        });
    },
    /**
     * 根据defdocCode+defdocListCode,查询自定义档案列表中的档案
     * @param serverUrl             服务器url
     * @param defdocTypeCode        自定义档案 类型code
     * @param defdocCode            自定义档案 列表项code
     * @param func
     */
    findDefDocListItemByCode: function findDefDocListItemByCode(serverUrl, defdocTypeCode, defdocCode, func) {
        ajax.getJSON(serverUrl + applicationName + ROOT_DEFDOC + 'editbycode', { defdoclistCode: defdocTypeCode, defdocCode: defdocCode }, function (data) {
            if (_.isFunction(func)) {
                func(data);
            }
        });
    },
    /**
     * 在某个自定义类型下,新增一个自定义档案
     * @param serverUrl             服务器url
     * @param defDocTypeId          自定义档案 类型id
     * @param code                  自定义档案 编码
     * @param name                  自定义档案 名称
     * @param memo                  自定义档案 备注
     * @param orgId                 自定义档案 组织ID
     * @param func
     */
    addDefDocListItem: function addDefDocListItem(serverUrl, defDocTypeId, code, name, memo, orgId, func) {
        this._saveDefDocListItem(serverUrl, defDocTypeId, null, code, name, memo, orgId, func);
    },
    /**
     * 修改某个自定义类型下的自定义档案
     * @param serverUrl             服务器url
     * @param defDocTypeId          自定义档案 类型id
     * @param defdocId              自定义档案 id
     * @param code                  自定义档案 编码
     * @param name                  自定义档案 名称
     * @param memo                  自定义档案 备注
     * @param orgId                 自定义档案 组织ID
     * @param func
     */
    updateDefDocListItem: function updateDefDocListItem(serverUrl, defDocTypeId, defdocId, code, name, memo, orgId, func) {
        this._saveDefDocListItem(serverUrl, defDocTypeId, defdocId, code, name, memo, orgId, func);
    },
    _saveDefDocListItem: function _saveDefDocListItem(serverUrl, defDocTypeId, defdocId, code, name, memo, orgId, func) {
        var defDocListItem = this._buildDefDocListItem();
        defDocListItem = _.assign(defDocListItem, { defdoclistId: defDocTypeId, defdocId: defdocId, code: code, name: name, memo: memo, orgId: orgId });
        ajax.postJSON(serverUrl + applicationName + ROOT_DEFDOC + 'save', defDocListItem, function (data) {
            if (_.isFunction(func)) {
                func(data);
            }
        });
    },
    _buildDefDocListItem: function _buildDefDocListItem() {
        var defDocListItem = {
            defdocId: null,
            orgId: '',
            defdoclistId: '',
            code: '',
            name: '',
            mnecode: '',
            innercode: '',
            memo: '',
            shortname: '',
            def1: '',
            def2: '',
            def3: '',
            def4: '',
            def5: '',
            def6: '',
            def7: '',
            def8: '',
            def9: '',
            def10: '',
            parentId: '',
            isActive: true
        };
        return defDocListItem;
    }
};

module.exports = DefDocUtil;