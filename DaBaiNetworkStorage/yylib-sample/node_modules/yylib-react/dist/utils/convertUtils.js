'use strict';

/**
 * Created by cdr_c on 2016/9/11.
 */
var ajax = require('yylib-utils/ajax');
var SERVICE_ROOT = "/common/";

/**
 * 数据转换工具类
 */
var convertUtils = {
    /**
     * 创建实体
     * @param url 服务地址
     * @param parentEntity 父实体对象，支持主子表
     * @param success 请求成功的回调
     * @param error 请求失败的回调
     * @param complete 请求完成时的回调，无论成功还是失败
     * 参数示例：
     {
         "entityName": "com.yyjz.icop.rad.web.entity.SecurityEntity",
         "entityJson": {
             "billNo": "AQJD-005",
             "content": "交底内容005",
             "closeDate": "2016-11-05"
         },
         "children": [
             {
                 "propertyName": "children",
                 "parentIdName": "parentId",
                 "entityName": "com.yyjz.icop.rad.web.entity.SecurityPsnEntity",
                 "entityValues": [
                     {
                         "entityJson": {
                             "psnName": "吴彦祖",
                             "sex": "男"
                         }
                     },
                     {
                         "entityJson": {
                             "psnName": "张韶涵",
                             "sex": "女"
                         }
                     }
                 ]
             }
         ]
     }
     */
    create: function create(url, parentEntity, success, error, complete) {
        ajax.postJSON(url + SERVICE_ROOT + 'create', parentEntity, success, error, complete);
    },


    /**
     * 修改实体
     * @param url 服务地址
     * @param parentEntity 父实体对象，支持主子表
     * @param success 请求成功的回调
     * @param error 请求失败的回调
     * @param complete 请求完成时的回调，无论成功还是失败
     * 参数示例：
     {
         "entityName": "com.yyjz.icop.rad.web.entity.SecurityEntity",
         "entityJson": {
             "id": "8a80cb815861fe8d0158620018a20000",
             "billNo": "AQJD-007",
             "content": "交底内容007",
             "closeDate": "2016-11-07"
         },
         "children": [
             {
                 "propertyName": "children",
                 "parentIdName": "parentId",
                 "entityName": "com.yyjz.icop.rad.web.entity.SecurityPsnEntity",
                 "entityValues": [
                     {
                         "entityJson": {
                             "psnName": "范晓萱",
                             "sex": "女"
                         }
                     },
                     {
                         "entityJson": {
                             "parentId": "8a80cb815861fe8d0158620018a20000",
                             "id": "8a80cb815861fe8d0158620019590002",
                             "psnName": "张韶涵",
                             "sex": "女",
                             "age": "26"
                         }
                     }
                 ]
             }
         ]
     }
     */
    update: function update(url, parentEntity, success, error, complete) {
        ajax.postJSON(url + SERVICE_ROOT + 'update', parentEntity, success, error, complete);
    },


    /**
     * 删除实体
     * @param url 服务地址
     * @param entityName 实体完整类型
     * @param id 主键
     * @param success 请求成功的回调
     * @param error 请求失败的回调
     * @param complete 请求完成时的回调，无论成功还是失败
     * 参数示例：entityName=com.yyjz.icop.rad.web.entity.SecurityEntity&id=8a80cb8158d74ea00158d7509bf60001
     */
    delete: function _delete(url, entityName, id, success, error, complete) {
        ajax.getJSON(url + SERVICE_ROOT + 'delete', {
            entityName: entityName,
            id: id
        }, success, error, complete);
    },


    /**
     * 删除多个实体
     * @param url 服务地址
     * @param entityName 实体完整类型
     * @param ids 主键数组
     * @param success 请求成功的回调
     * @param error 请求失败的回调
     * @param complete 请求完成时的回调，无论成功还是失败
     * 参数示例：entityName=com.yyjz.icop.rad.web.entity.SecurityEntity&
     *  ids=8a80cb8158d74ea00158d74ff4df0000,8a80cb8158d74ea00158d75613de0002
     */
    multiDelete: function multiDelete(url, entityName, ids, success, error, complete) {
        ajax.getJSON(url + SERVICE_ROOT + 'multiDelete', {
            entityName: entityName,
            ids: ids
        }, success, error, complete);
    },


    /**
     * 逻辑删除实体
     * @param url 服务地址
     * @param entityName 实体完整类型
     * @param id 主键
     * @param success 请求成功的回调
     * @param error 请求失败的回调
     * @param complete 请求完成时的回调，无论成功还是失败
     * 参数示例：entityName=com.yyjz.icop.rad.web.entity.SecurityEntity&id=8a80cb8158dc62c40158dcc5906c0000
     */
    logicDel: function logicDel(url, entityName, id, success, error, complete) {
        ajax.getJSON(url + SERVICE_ROOT + 'logicDel', {
            entityName: entityName,
            id: id
        }, success, error, complete);
    },


    /**
     * 逻辑删除多个实体
     * @param url 服务地址
     * @param entityName 实体完整类型
     * @param ids 主键数组
     * @param success 请求成功的回调
     * @param error 请求失败的回调
     * @param complete 请求完成时的回调，无论成功还是失败
     * 参数示例：entityName=entityName=com.yyjz.icop.rad.web.entity.SecurityEntity&
     *  ids=8a80cb8158dc62c40158dcc5906c0000,8a80cb8158dc62c40158dcc6a2f50002
     */
    multiLogicDel: function multiLogicDel(url, entityName, ids, success, error, complete) {
        ajax.getJSON(url + SERVICE_ROOT + 'multiLogicDel', {
            entityName: entityName,
            ids: ids
        }, success, error, complete);
    },


    /**
     * 获取实体
     * @param url 服务地址
     * @param entityName 实体完整类型
     * @param id 主键
     * @param success 请求成功的回调
     * @param error 请求失败的回调
     * @param complete 请求完成时的回调，无论成功还是失败
     * 参数示例：entityName=com.yyjz.icop.rad.web.entity.SecurityEntity&id=8a80cb8158d74ea00158d7509bf60001
     */
    get: function get(url, entityName, id, success, error, complete) {
        ajax.getJSON(url + SERVICE_ROOT + 'get', {
            entityName: entityName,
            id: id
        }, success, error, complete);
    },


    /**
     * 获取实体集合
     * @param url 服务地址
     * @param entityName 实体完整类型
     * @param ids 主键数组
     * @param success 请求成功的回调
     * @param error 请求失败的回调
     * @param complete 请求完成时的回调，无论成功还是失败
     * 参数示例：id=8a80cb8158d74ea00158d7509bf60001&entityName=com.yyjz.icop.rad.web.entity.SecurityEntity
     */
    getList: function getList(url, entityName, ids, success, error, complete) {
        ajax.getJSON(url + SERVICE_ROOT + 'getList', {
            entityName: entityName,
            ids: ids
        }, success, error, complete);
    },


    /**
     * 获取json
     * @param url 服务地址
     * @param entityName 实体完整类型
     * @param properties 属性数组
     * @param id 主键
     * @param success 请求成功的回调
     * @param error 请求失败的回调
     * @param complete 请求完成时的回调，无论成功还是失败
     * 参数示例：id=8a80cb8158d74ea00158d7509bf60001&entityName=com.yyjz.icop.rad.web.entity.SecurityEntity&properties=id,billNo
     */
    getJson: function getJson(url, entityName, properties, id, success, error, complete) {
        ajax.getJSON(url + SERVICE_ROOT + 'getJson', {
            entityName: entityName,
            properties: properties,
            id: id
        }, success, error, complete);
    },


    /**
     * 获取json数组
     * @param url 服务地址
     * @param entityName 实体完整类型
     * @param properties 属性数组
     * @param ids 主键数组
     * @param success 请求成功的回调
     * @param error 请求失败的回调
     * @param complete 请求完成时的回调，无论成功还是失败
     * 参数示例：ids=8a80cb8158d74ea00158d7509bf60001,8a80cb8158d74ea00158d75613de0002&
     *  entityName=com.yyjz.icop.rad.web.entity.SecurityEntity&properties=id,billNo
     */
    getJsonArray: function getJsonArray(url, entityName, properties, ids, success, error, complete) {
        ajax.getJSON(url + SERVICE_ROOT + 'getJsonArray', {
            entityName: entityName,
            properties: properties,
            ids: ids
        }, success, error, complete);
    },


    /**
     * 查找实体集合
     * @param url 服务地址
     * @param query 查询对象
     * @param success 请求成功的回调
     * @param error 请求失败的回调
     * @param complete 请求完成时的回调，无论成功还是失败
     * 参数示例：
     {
         "entityName": "com.yyjz.icop.rad.web.entity.SecurityEntity",
         "criterion": {"billNo": "AQJD-003"},
         "condition": [
             {
                 "field": "content",
                 "compare": "CN",
                 "data": "交底内容"
             }
         ],
         "sort": ["createDate:desc"]
     }
     */
    findList: function findList(url, query, success, error, complete) {
        ajax.getJSON(url + SERVICE_ROOT + 'findList', {
            entityName: query.entityName,
            criterion: query.criterion,
            condition: query.condition,
            sort: query.sort
        }, success, error, complete);
    },


    /**
     * 分页查找实体集合
     * @param url 服务地址
     * @param query 查询对象
     * @param success 请求成功的回调
     * @param error 请求失败的回调
     * @param complete 请求完成时的回调，无论成功还是失败
     * 参数示例：
     {
         "entityName": "com.yyjz.icop.rad.web.entity.SecurityEntity",
         "criterion": {"billNo": "AQJD-003"},
         "condition": [
             {
                 "field": "content",
                 "compare": "CN",
                 "data": "交底内容"
             }
         ],
         "sort": ["createDate:desc"],
         "pageNumber": 0,
         "pageSize": 3
     }
     */
    findPage: function findPage(url, query, success, error, complete) {
        ajax.getJSON(url + SERVICE_ROOT + 'findList', {
            entityName: query.entityName,
            criterion: query.criterion,
            condition: query.condition,
            sort: query.sort,
            pageNumber: query.pageNumber,
            pageSize: query.pageSize
        }, success, error, complete);
    },


    /**
     * 查找json数组
     * @param url 服务地址
     * @param query 查询对象
     * @param success 请求成功的回调
     * @param error 请求失败的回调
     * @param complete 请求完成时的回调，无论成功还是失败
     * 参数示例：
     {
         "entityName": "com.yyjz.icop.rad.web.entity.SecurityEntity",
         "criterion": {"billNo": "AQJD-003"},
         "condition": [
             {
                 "field": "content",
                 "compare": "CN",
                 "data": "交底内容"
             }
         ],
         "sort": ["createDate:desc"],
         "properties": ["id", "billNo"]
     }
     */
    findJsonArray: function findJsonArray(url, query, success, error, complete) {
        ajax.getJSON(url + SERVICE_ROOT + 'findJsonArray', {
            entityName: query.entityName,
            criterion: query.criterion,
            condition: query.condition,
            sort: query.sort,
            properties: query.properties
        }, success, error, complete);
    },


    /**
     * 分页查找json数组
     * @param url 服务地址
     * @param query 查询对象
     * @param success 请求成功的回调
     * @param error 请求失败的回调
     * @param complete 请求完成时的回调，无论成功还是失败
     * 参数示例：
     {
         "entityName": "com.yyjz.icop.rad.web.entity.SecurityEntity",
         "criterion": {"billNo": "AQJD-003"},
         "condition": [
             {
                 "field": "content",
                 "compare": "CN",
                 "data": "交底内容"
             }
         ],
         "sort": ["createDate:desc"],
         "properties": ["id", "billNo"],
         "pageNumber": 0,
         "pageSize": 3
     }
     */
    findJsonPage: function findJsonPage(url, query, success, error, complete) {
        ajax.getJSON(url + SERVICE_ROOT + 'findJsonPage', {
            entityName: query.entityName,
            criterion: query.criterion,
            condition: query.condition,
            sort: query.sort,
            properties: query.properties,
            pageNumber: query.pageNumber,
            pageSize: query.pageSize
        }, success, error, complete);
    },


    /**
     * 根据id获取json
     * @param url 服务地址
     * @param entityName 实体名称（完整路径）
     * @param properties 属性数组
     * @param id 主键
     * @param success 请求成功的回调
     * @param error 请求失败的回调
     * @param complete 请求完成时的回调，无论成功还是失败
     * @Deprecated 已过时，建议使用getJson
     * 参数示例：
     {
         "entityName": "com.yyjz.icop.rad.web.entity.SecurityEntity",
         "id": "8a80cb8158d74ea00158d7509bf60001",
         "properties": ["id", "billNo"]
     }
     */
    getJsonById: function getJsonById(url, entityName, properties, id, success, error, complete) {
        ajax.postJSON(url + SERVICE_ROOT + 'findJsonById', {
            entityName: entityName,
            properties: properties.join(),
            id: id
        }, success, error, complete);
    },


    /**
     * 根据ids获取json array
     * @param url 服务地址
     * @param entityName 实体名称（完整路径）
     * @param properties 属性数组
     * @param ids 主键集合
     * @param success 请求成功的回调
     * @param error 请求失败的回调
     * @param complete 请求完成时的回调，无论成功还是失败
     * @Deprecated 已过时，建议使用getJsonArray
     * 参数示例：
     {
         "entityName": "com.yyjz.icop.rad.web.entity.SecurityEntity",
         "ids": ["8a80cb8158dc62c40158dcc5906c0000", "8a80cb8158dc62c40158dcc6a2f50002"],
         "properties": ["id", "billNo"]
     }
     */
    getJsonArrayByIds: function getJsonArrayByIds(url, entityName, properties, ids, success, error, complete) {
        if (url == null || url.length < 1) {
            console.error("地址不能为空！");
            return;
        }
        ajax.postJSON(url + SERVICE_ROOT + 'findJsonArrayByIds', {
            entityName: entityName,
            properties: properties,
            ids: ids
        }, success, error, complete);
    }
};

module.exports = convertUtils;