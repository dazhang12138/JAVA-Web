'use strict';

/**
 * @copyright material-ui
 */
var React = require('react');

var _require = require('react-dom'),
    findDOMNode = _require.findDOMNode;

var YYClass = require('../base/YYClass');
var transitions = require('./transitions');

var CircleRipple = YYClass.create({
  getDefaultProps: function getDefaultProps() {
    return {
      opacity: 0.1,
      aborted: false
    };
  },

  componentWillUnmount: function componentWillUnmount() {
    clearTimeout(this.enterTimer);
    clearTimeout(this.leaveTimer);
  },

  componentWillAppear: function componentWillAppear(callback) {
    this.initializeAnimation(callback);
  },

  componentWillEnter: function componentWillEnter(callback) {
    this.initializeAnimation(callback);
  },

  componentDidAppear: function componentDidAppear() {
    this.animate();
  },

  componentDidEnter: function componentDidEnter() {
    this.animate();
  },

  componentWillLeave: function componentWillLeave(callback) {
    var style = findDOMNode(this).style;
    style.opacity = 0;
    // If the animation is aborted, remove from the DOM immediately
    var removeAfter = this.props.aborted ? 0 : 2000;
    this.enterTimer = setTimeout(callback, removeAfter);
  },

  animate: function animate() {
    var style = findDOMNode(this).style;
    var transitionValue = transitions.easeOut('2s', 'opacity') + ', ' + transitions.easeOut('1s', 'transform');
    style.transition = transitionValue;
    style.transform = 'scale(1)';
  },

  initializeAnimation: function initializeAnimation(callback) {
    var style = findDOMNode(this).style;
    style.opacity = this.props.opacity;
    style.transform = 'scale(0)';
    this.leaveTimer = setTimeout(callback, 0);
  },

  render: function render() {
    var _props = this.props,
        aborted = _props.aborted,
        color = _props.color,
        opacity = _props.opacity,
        style = _props.style,
        touchGenerated = _props.touchGenerated;


    var mergedStyles = Object.assign({
      position: 'absolute',
      top: 0,
      left: 0,
      height: '100%',
      width: '100%',
      borderRadius: '50%',
      backgroundColor: color
    }, style);

    return React.createElement('div', { style: mergedStyles });
  }
});

module.exports = CircleRipple;