'use strict';

/**
 * 步骤条组件
 */
var React = require('react');
var YYClass = require('../base/YYClass');
var PropTypes = YYClass.PropTypes;
var field = YYClass.field;

var _require = require('antd'),
    Steps = _require.Steps;

//定义META


var uiMeta = {
    name: 'step',
    fields: [
    // field参数列表：字段属性名|属性默认值|属性类型|是否必填|属性描述
    field('status', undefined, PropTypes.oneOf(['wait', 'process', 'finish', 'error']), false, '指定当前步骤的状态'), field('title', '', PropTypes.oneOf([PropTypes.string, PropTypes.element]), true, '标题'), field('description', '', PropTypes.oneOf([PropTypes.string, PropTypes.element]), true, '附加描述'), field('icon', undefined, PropTypes.string, true, '显示的图标')]
};
var YYStep = YYClass.create({
    uiMeta: uiMeta,
    render: function render() {
        var _props = this.props,
            status = _props.status,
            iconText = _props.iconText,
            title = _props.title,
            isLast = _props.isLast;

        status = !!status && iconText ? 'process' : status;
        return React.createElement(
            'div',
            { className: 'ant-steps-item ant-steps-status-' + status + ' yyui-step' },
            !isLast ? React.createElement(
                'div',
                { className: 'ant-steps-tail ant-steps-tail-no-direction' },
                React.createElement('i', null)
            ) : null,
            React.createElement(
                'div',
                { className: 'ant-steps-step' },
                React.createElement(
                    'div',
                    { className: 'ant-steps-head' },
                    React.createElement(
                        'div',
                        { className: 'ant-steps-head-inner' },
                        status == 'error' ? React.createElement('span', { className: 'ant-steps-icon anticon anticon-cross' }) : null,
                        status == 'finish' ? React.createElement('span', { className: 'ant-steps-icon anticon anticon-check' }) : null,
                        React.createElement(
                            'span',
                            { className: 'ant-steps-icon' },
                            iconText
                        )
                    )
                ),
                React.createElement(
                    'div',
                    { className: 'ant-steps-main' },
                    React.createElement(
                        'div',
                        { className: 'ant-steps-title' },
                        React.createElement(
                            'span',
                            { style: { cursor: 'pointer' } },
                            title
                        )
                    )
                )
            )
        );
    }
});
module.exports = YYStep;