'use strict';

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

/**
 * 内嵌页面
 */
var React = require('react');
var YYClass = require('../base/YYClass');
var field = YYClass.field;
var PropTypes = YYClass.PropTypes;
var uiMeta = {
    name: 'iframe',
    fields: [
    // field参数列表：字段属性名|属性默认值|属性类型|是否必填|属性描述
    field('src', null, PropTypes.string, true, '内嵌页面地址'), field('height', null, PropTypes.number, true, '内嵌页面高度'), field('width', null, PropTypes.number, false, '内嵌页面宽度'), field('frameBorder', 1, PropTypes.number, false, '1->有边框（默认）,0->无边框'), field('scrolling', 'auto', PropTypes.array, false, '是否支持滚动,默认为auto,可选值auto|yes|no')]
};
var YYIframe = YYClass.create({
    uiMeta: uiMeta,
    render: function render() {
        return React.createElement('iframe', _extends({}, this.props, { className: this.className(), frameborder: this.props.frameBorder }));
    }
});

module.exports = YYIframe;