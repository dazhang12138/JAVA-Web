"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.loadingReferTree = loadingReferTree;
exports.loadingReferGrid = loadingReferGrid;
exports.getRefinfo = getRefinfo;
exports.getLazyTreeData = getLazyTreeData;
exports.getTreeData = getTreeData;
exports.getGridData = getGridData;
exports.doReload = doReload;
exports.clearPreDatas = clearPreDatas;
exports.getOften = getOften;
exports.addOften = addOften;
exports.deleteOften = deleteOften;

var _ReferConstants = require("../constants/ReferConstants");

var ajax = require('../../../utils/ajax');
var TreeUtils = require("../../../utils/TreeUtils");
var mockdata = require("./mockdata");

var _require = require('../utils/YYReferUtils'),
    getNewTreeData = _require.getNewTreeData,
    generateTreeNodes = _require.generateTreeNodes;

var TreeDataUtils = require('../../../utils/TreeUtils');

/*按照id获取参照配置表数据*/
function getRefinfoByIdSuccess(key, data) {
    return {
        type: _ReferConstants.GET_REFINFO_BYCODE_SUCCESS,
        key: key,
        data: data
    };
}
function getRefinfoByIdFail(flag) {
    return {
        type: _ReferConstants.GET_REFINFO_BYCODE_ERROR,
        flag: flag
    };
}
/*获取树数据*/
var getTreeDataSuccess = function getTreeDataSuccess(data) {
    return function (dispatch) {
        dispatch({
            type: _ReferConstants.GET_TREEDATA_REF_SUCCESS,
            data: data
        });
        return Promise.resolve();
    };
};
function getTreeDataFail(flag) {
    return {
        type: _ReferConstants.GET_TREEDATA_REF_ERROR,
        flag: flag
    };
}
/*获取表数据*/
function getGridDataSuccess(data) {
    return {
        type: _ReferConstants.GET_GRIDDATA_REF_SUCCESS,
        data: data
    };
}
function getGridDataFail(flag) {
    return {
        type: _ReferConstants.GET_GRIDDATA_REF_ERROR,
        flag: flag
    };
}

/*获取树表数据: 表*/
function getTreeGridDataSuccess(data) {
    return {
        type: _ReferConstants.GET_TREEGRIDDATA_REF_SUCCESS,
        data: data
    };
}
function getTreeGridDataFail(flag) {
    return {
        type: _ReferConstants.GET_TREEGRIDDATA_REF_ERROR,
        flag: flag
    };
}

/*获取树表数据: 树数据+表数据*/
function getTreeAndGridDataSuccess(treeData, treeGridData) {
    return {
        type: _ReferConstants.GET_TREE_AND_GRID_REF_SUCCESS,
        treeData: treeData,
        treeGridData: treeGridData
    };
}

/*获取常用*/
function getOftenSuccess(data) {
    return {
        type: _ReferConstants.GET_REFER_OFTEN_SUCCESS,
        data: data
    };
}

function getOftenError(data) {
    return {
        type: _ReferConstants.GET_REFER_OFTEN_ERROR,
        data: data
    };
}

/*保存常用*/
function saveOftenSuccess(data, ifShowMsg) {
    return {
        type: _ReferConstants.SAVE_REFER_OFTEN_SUCCESS,
        ifShowMsg: ifShowMsg,
        data: data
    };
}
function saveOftenError(errorMsg) {
    return {
        type: _ReferConstants.SAVE_REFER_OFTEN_ERROR,
        errorMsg: errorMsg
    };
}

/*删除常用*/
function deleteOftenSuccess(data) {
    return {
        type: _ReferConstants.DELETE_REFER_OFTEN_SUCCESS,
        data: data
    };
}
function deleteOftenError(data) {
    return {
        type: _ReferConstants.DELETE_REFER_OFTEN_ERROR,
        errorMsg: errorMsg
    };
}
function loadingReferTree(loading) {
    return {
        type: _ReferConstants.LOADING_REFER_TREE,
        loadingReferTree: loading
    };
}
function loadingReferGrid(loading) {
    return {
        type: _ReferConstants.LOADING_REFER_GRID,
        loadingReferGrid: loading
    };
}
function getRefinfo(serverUrl, key, querydata) {
    return function (dispatch) {
        ajax.request({
            method: 'GET',
            url: serverUrl + _ReferConstants.GET_REFINFO_BYCODE,
            query: querydata,
            type: 'json',
            success: function success(data) {
                return dispatch(getRefinfoByIdSuccess(key, data));
            },
            error: function error(data) {
                return dispatch(getRefinfoByIdFail(true));
            }
        });
    };
}

/**
 * 异步树加载
 * @param treeData
 * @param treeNode
 */
function getLazyTreeData(options) {
    var dataurl = options.dataurl,
        dispatch = options.dispatch,
        curKey = options.curKey,
        treeData = options.treeData,
        resolve = options.resolve,
        queryData = options.queryData;

    queryData = _.assign({}, queryData, { pid: curKey });
    ajax.getJSON(dataurl, queryData, function (result) {
        var loop = function loop(data) {
            data.forEach(function (item) {
                if (curKey == item.id) {
                    item.children = result;
                } else {
                    if (item.children) {
                        loop(item.children);
                    }
                }
            });
        };
        loop(treeData);
        dispatch(getTreeDataSuccess(treeData)).then(function () {
            resolve();
        });
    }, function (error) {
        resolve();
    });
}

// queryType === REFER_TYPE_TREEGRID情况下， dataurl、queryGrid生效
function getTreeData(dataurl, querydata, queryType, queryGrid) {
    return function (dispatch) {
        dispatch(loadingReferTree(true));
        ajax.request({
            method: 'GET',
            url: dataurl,
            query: querydata,
            type: 'json',
            accept: 'text',
            success: function success(data) {
                if (queryType === _ReferConstants.REFER_TYPE_TREEGRID) {
                    var treeData = JSON.parse(data);
                    // 树表参照, 查询树后 默认根据第一个根的第一个子节点查询grid数据
                    var querydata = queryGrid.querydata;
                    if (treeData && treeData[0] && queryGrid && queryGrid.dataurl) {
                        // 第二次发起请求，失败的话，dispatch(getGridDataSuccess(data))
                        var nodeKey = null;
                        if (queryGrid.nodeKey && TreeUtils.findById(treeData, queryGrid.nodeKey)) {
                            nodeKey = queryGrid.nodeKey;
                        } else {
                            if (treeData[0].children && treeData[0].children[0]) {
                                nodeKey = treeData[0].children[0].id;
                            } else {
                                nodeKey = treeData[0].id;
                            }
                        }
                        if (querydata) {
                            var fullCondition = querydata.relyCondition;
                            // queryGrid.relyfield 是必传的参数，如果没有，说明程序错误。所以此处不加非空判断
                            if (fullCondition) {
                                fullCondition += " and " + queryGrid.relyfield + "=" + nodeKey;
                            } else {
                                fullCondition = queryGrid.relyfield + "=" + nodeKey;
                            }
                            querydata.relyCondition = fullCondition;
                        }
                        dispatch(loadingReferGrid(true));
                        ajax.request({
                            method: 'GET',
                            url: queryGrid.dataurl,
                            query: querydata,
                            type: 'json',
                            success: function success(gridData) {
                                dispatch(loadingReferGrid(false));
                                return dispatch(getTreeAndGridDataSuccess(treeData, gridData));
                            },
                            error: function error(gridData) {
                                dispatch(loadingReferGrid(false));
                                // return dispatch(getTreeGridDataFail(true));
                                return dispatch(getTreeDataSuccess(JSON.parse(data)));
                            }
                        });
                    } else {
                        return dispatch(getTreeDataSuccess(JSON.parse(data)));
                    }
                }
                dispatch(loadingReferTree(false));
                return dispatch(getTreeDataSuccess(JSON.parse(data)));
            },
            error: function error(data) {
                dispatch(loadingReferTree(false));
                return dispatch(getTreeDataFail(true));
            }
        });
    };
}

function getGridData(dataurl, querydata, queryType) {
    return function (dispatch) {
        dispatch(loadingReferGrid(true));
        ajax.request({
            method: 'GET',
            url: dataurl,
            query: querydata,
            type: 'json',
            success: function success(data) {
                dispatch(loadingReferGrid(false));
                if (queryType === _ReferConstants.REFER_TYPE_TREEGRID) {
                    return dispatch(getTreeGridDataSuccess(data));
                } else {
                    return dispatch(getGridDataSuccess(data));
                }
            },
            error: function error(data) {
                dispatch(loadingReferGrid(false));
                if (queryType === _ReferConstants.REFER_TYPE_TREEGRID) {
                    return dispatch(getTreeGridDataFail(true));
                } else {
                    return dispatch(getGridDataFail(true));
                }
            }
        });
    };
}

function doReload() {
    return function (dispatch) {
        return dispatch({
            type: _ReferConstants.DO_RELOAD_REF
        });
    };
}

function clearPreDatas() {
    return function (dispatch) {
        return dispatch({
            type: _ReferConstants.DO_CLEAR_PREDATAS
        });
    };
}

// 查询常用
function getOften(serverUrl, params) {
    return function (dispatch) {
        ajax.request({
            method: 'GET',
            url: ajax.fillUrlParams(serverUrl + _ReferConstants.GET_REFER_OFTEN, params),
            type: 'json',
            success: function success(data) {
                if (data) {
                    return dispatch(getOftenSuccess(data.backData));
                } else {
                    return dispatch(getOftenError(data.backMsg));
                }
            },
            error: function error(data) {
                return dispatch(getOftenError(_ReferConstants.REFER_ERROR_MSG));
            }
        });
    };
}

// 添加常用
function addOften(serverUrl, sendDatas, ifShowMsg) {
    return function (dispatch) {
        ajax.request({
            method: 'post',
            url: serverUrl + _ReferConstants.SAVE_REFER_OFTEN,
            send: JSON.stringify(sendDatas),
            type: 'json',
            success: function success(data) {
                if (data && data.success === true) {
                    return dispatch(saveOftenSuccess(data.backData, ifShowMsg));
                } else {
                    return dispatch(saveOftenError(data.backMsg));
                }
            },
            error: function error(data) {
                return dispatch(saveOftenError(_ReferConstants.REFER_ERROR_MSG));
            }
        });
    };
}

// 删除常用
function deleteOften(serverUrl, params) {
    return function (dispatch) {
        ajax.request({
            method: 'get',
            url: ajax.fillUrlParams(serverUrl + _ReferConstants.DELETE_REFER_OFTEN, params),
            type: 'json',
            success: function success(data) {
                if (data && data.success === true) {
                    return dispatch(deleteOftenSuccess(data.backData));
                } else {
                    return dispatch(deleteOftenError(data.backMsg));
                }
            },
            error: function error(data) {
                return dispatch(deleteOftenError(_ReferConstants.REFER_ERROR_MSG));
            }
        });
    };
}