'use strict';

var React = require('react');
var YYClass = require('../../base/YYClass');
var PropTypes = YYClass.PropTypes;
var field = YYClass.field;

var _require = require('antd'),
    Slider = _require.Slider;

require('./style/index.less');
var uiMeta = {
    name: 'slider',
    fields: [
    // field参数列表：字段属性名|属性默认值|属性类型|是否必填|属性描述
    field('range', false, PropTypes.bool, false, '双滑块模式'), field('min', 0, PropTypes.number, false, '最小值'), field('max', 100, PropTypes.number, false, '最大值'), field('step', 1, PropTypes.oneOf([PropTypes.number, PropTypes.null]), false, '步长，取值必须大于 0，并且可被 (max - min) 整除。当 marks 不为空对象时，可以设置 step 为 null，此时 Slider 的可选值仅有 marks 标出来的部分。'), field('marks', {}, PropTypes.object, false, '刻度标记，key 的类型必须为 Number 且取值在闭区间 [min, max] 内，每个标签可以单独设置样式  '), field('dots', false, PropTypes.bool, false, '是否只能拖拽到刻度上'), field('value', undefined, PropTypes.oneOf([PropTypes.array, PropTypes.number]), false, '设置当前取值。当 range 为 false 时，使用 Number，否则用 [Number, Number]   '), field('defaultValue', 0, PropTypes.oneOf([PropTypes.array, PropTypes.number]), false, '设置当前取值。当 range 为 false 时，使用 Number，否则用 [Number, Number]   '), field('included', true, PropTypes.bool, false, 'marks 不为空对象时有效，值为 true 时表示值为包含关系，false 表示并列'), field('disabled', false, PropTypes.bool, false, '值为 true 时，滑块为禁用状态'), field('onChange', null, PropTypes.func, true, '当 Slider 的值发生改变时，会触发 onChange 事件，并把改变后的值作为参数传入.'), field('onAfterChange', null, PropTypes.func, true, '与 onmouseup 触发时机一致，把当前值作为参数传入。  '), field('tipFormatter', null, PropTypes.oneOf([PropTypes.func, PropTypes.null]), true, 'Slider 会把当前值传给 tipFormatter，并在 Tooltip 中显示 tipFormatter 的返回值，若为 null，则隐藏 Tooltip')]
};

var YYSlider = YYClass.create({
    uiMeta: uiMeta,
    getInitialState: function getInitialState() {
        return {};
    },
    render: function render() {
        return React.createElement(
            'div',
            { className: this.className() },
            React.createElement(
                Slider,
                this.props,
                this.props.children
            )
        );
    }
});

module.exports = YYSlider;