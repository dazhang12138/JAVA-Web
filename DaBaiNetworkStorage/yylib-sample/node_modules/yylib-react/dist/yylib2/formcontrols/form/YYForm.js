'use strict';

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var React = require('react');
var YYClass = require('../../base/YYClass');
var PropTypes = YYClass.PropTypes;
var field = YYClass.field;

var _require = require('antd'),
    Form = _require.Form;

require('./style/index.less');
//定义META
var uiMeta = {
    name: 'form',
    fields: [
    // field参数列表：字段属性名|属性默认值|属性类型|是否必填|属性描述
    field('horizontal', false, PropTypes.bool, false, '水平排列布局'), field('onSubmit', null, PropTypes.func, true, '数据验证成功后回调事件')]
};

var YYForm = YYClass.create({
    uiMeta: uiMeta,
    statics: {
        Item: Form.Item
    },
    getInitialState: function getInitialState() {
        return {};
    },
    render: function render() {
        var cls = this.className();
        return React.createElement(
            Form,
            _extends({}, this.props, { className: cls }),
            this.props.children
        );
    }
});
YYForm.create = Form.create;
module.exports = YYForm;