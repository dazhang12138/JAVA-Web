'use strict';

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var React = require('react');
var YYClass = require('../../base/YYClass');
var PropTypes = YYClass.PropTypes;
var field = YYClass.field;

var _require = require('antd'),
    Checkbox = _require.Checkbox;

require('./style/index.less');
var _ = require('lodash');

var uiMeta = {
    name: 'checkbox',
    fields: [
    // field参数列表：字段属性名|属性默认值|属性类型|是否必填|属性描述
    field('checked', undefined, PropTypes.bool, false, '指定当前是否选中'), field('defaultChecked', false, PropTypes.bool, false, '初始是否选中'), field('onChange', null, PropTypes.func, true, '变化时回调函数')]
};

var YYCheckbox = YYClass.create({
    uiMeta: uiMeta,
    statics: {
        Group: Checkbox.Group
    },
    getInitialState: function getInitialState() {
        return {};
    },
    _onChange: function _onChange(event) {
        if (event && event.target) {
            // 赋值value，以在表单里统一通过value取值处理
            event.target.value = event.target.checked;
        }
        this.props.onChange(event);
    },
    render: function render() {
        return React.createElement(
            Checkbox,
            _extends({}, this.props, { onChange: this._onChange, className: this.className() }),
            this.props.children
        );
    }
});
module.exports = YYCheckbox;