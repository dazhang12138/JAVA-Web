'use strict';

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

/**
 * 日历组件
 */
var React = require('react');
var YYClass = require('../base/YYClass');
var PropTypes = YYClass.PropTypes;
var field = YYClass.field;

var _require = require('antd'),
    Calendar = _require.Calendar;

require('./style/index.less');
//定义META
var uiMeta = {
    name: 'calendar',
    fields: [
    //field参数列表：字段属性名|属性默认值|属性类型|是否必填|属性描述
    field('value', new Date(), PropTypes.instanceOf(Date), true, '展示日期'), field('closable', false, PropTypes.instanceOf(Date), false, '默认展示日期'), field('mode', 'month', PropTypes.string, false, '初始模式 月/年'), field('fullscreen', true, PropTypes.bool, false, '是否全屏显示'), field('dateCellRender', null, PropTypes.func, false, '自定义渲染日期单元格'), field('monthCellRender', null, PropTypes.func, false, '自定义渲染月单元格'), field('locale', {}, PropTypes.object, false, '国际化配置'), field('onPanelChange', null, PropTypes.func, false, '日期面板变化回调')]
};
var YYCalendar = YYClass.create({
    uiMeta: uiMeta,
    render: function render() {
        return React.createElement(
            Calendar,
            _extends({}, this.props, { className: this.className() }),
            this.props.children
        );
    }
});

module.exports = YYCalendar;