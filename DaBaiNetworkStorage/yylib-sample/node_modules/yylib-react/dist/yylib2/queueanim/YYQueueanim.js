'use strict';

/**
 * Created by office on 2016/7/29.
 */
var React = require('react');
var YYClass = require('../base/YYClass');
var PropTypes = YYClass.PropTypes;
var field = YYClass.field;

var _require = require('antd'),
    QueueAnim = _require.QueueAnim;
//定义META


var uiMeta = {
    name: 'queueanim',
    fields: [field('type', 'right', PropTypes.oneOf(['left', 'right', 'top', 'bottom', 'scale', 'scaleBig', 'scaleX', 'scaleY']), false, '动画内置参数'), field('animConfig', null, PropTypes.oneOfType(['object', 'array']), false, '配置动画参数'), field('delay', 0, PropTypes.oneOfType(['number', 'array']), false, '整个动画的延时,以毫秒为单位'), field('duration', 500, PropTypes.oneOfType(['number', 'array']), false, '默认为500	每个动画的时间,以毫秒为单位'), field('interval', 100, PropTypes.oneOfType(['number', 'array']), false, '默认为100	每个动画的间隔时间,以毫秒为单位'), field('leaveReverse', false, PropTypes.bool, false, '出场时是否倒放,从最后一个 dom 开始往上播放'), field('ease', 'easeOutQuart', PropTypes.oneOfType(['string', 'array']), false, '动画的缓动函数'), field('animatingClassName', ['queue-anim-entering', 'queue-anim-leaving'], PropTypes.array, false, '进出场动画进行中的类名'), field('component', 'div', PropTypes.string, false, 'QueueAnim 替换的标签名')]
};
var YYQueueanim = YYClass.create({
    uiMeta: uiMeta,
    render: function render() {
        var cls = this.className();
        return React.createElement(
            'div',
            { className: cls },
            React.createElement(
                QueueAnim,
                this.props,
                this.props.children
            )
        );
    }
});

module.exports = YYQueueanim;