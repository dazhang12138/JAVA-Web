'use strict';

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

/**
 * Created by wuhao on 16/8/16.
 */

var React = require('react');
var YYClass = require('../base/YYClass');
var YYModal = require('../modal/YYModal');
var YYTransfer = require('../transfer/YYTransfer');
var YYCol = require('../layout/YYCol');
var YYRow = require('../layout/YYRow');
var YYCheckbox = require('../formcontrols/checkbox/YYCheckbox');
var YYInputNumber = require('../formcontrols/inputnumber/YYInputNumber');
var _ = require('lodash');
require('./style/index.less');
/*****已过期******/
var getColumnConfig = function getColumnConfig(data) {
    var columnsConfig = _.filter(data, function (column) {
        return column.dataIndex;
    }).map(function (column, i) {
        if (column.dataIndex) {
            // 需要配置dataIndex
            return {
                value: i,
                label: column.title,
                dataIndex: column.dataIndex,
                key: column.key,
                showIndex: i,
                width: column.width,
                render: column.render
            };
        }
    });
    return columnsConfig;
};
//双列表传输配置表格列-已过期
var HeadConfig = YYClass.create({
    getDefaultProps: function getDefaultProps() {
        return {
            columns: [],
            visible: false,
            onOk: null, // 确定按钮回调方法
            onCancel: null
        };
    },
    getInitialState: function getInitialState() {
        return {
            fixNumberLeft: 0,
            fixNumberRight: 0,
            disableLeft: true,
            disableRight: true
        };
    },
    fixColumn: function fixColumn(column, option) {
        if (!option.disableLeft) {
            for (var i = 0; i < option.fixNumberLeft; i++) {
                column[i].fixed = 'left';
            }
        }
        if (!option.disableRight) {
            for (var i = column.length; i >= column.length - option.fixNumberRight; i--) {
                console.log('i', i);
                column[i - 1].fixed = 'right';
            }
        }
        return column;
    },
    handlerOK: function handlerOK() {
        var _state = this.state,
            fixNumberLeft = _state.fixNumberLeft,
            fixNumberRight = _state.fixNumberRight,
            disableLeft = _state.disableLeft,
            disableRight = _state.disableRight;
        // 处理冻结列

        var columnShow = this.refs.colconfig.state.optionsLeft.map(function (column, i) {
            column.title = column.label;
            column.showIndex = i;
            column.isShow = true;
            return column;
        });
        columnShow = this.fixColumn(columnShow, {
            fixNumberLeft: fixNumberLeft,
            fixNumberRight: fixNumberRight,
            disableLeft: disableLeft,
            disableRight: disableRight
        });
        console.log('columnShow', columnShow);
        var columnHide = this.refs.colconfig.state.optionsRight.map(function (column) {
            column.isShow = false;
            return column;
        });
        var columnAll = columnShow.concat(columnHide);
        // 执行回调
        if (_.isFunction(this.props.onOk)) {
            this.props.onOk(columnAll, columnShow, columnHide);
        }
    },
    handlerCancel: function handlerCancel() {
        if (_.isFunction(this.props.onCancel)) {
            this.props.onCancel();
        }
    },
    handleFixCheck: function handleFixCheck(type, e) {
        this.setState(_defineProperty({}, type == 'left' ? 'disableLeft' : 'disableRight', !e.target.checked));
        // if (type == 'left') {
        //     this.setState({fixNumberLeft: fixNumberLeft})
        // } else if (type == 'right') {
        //     this.setState({fixNumberRight: fixNumberRight})
        // }
    },
    handleNumberChange: function handleNumberChange(type, value) {
        this.setState(_defineProperty({}, type == 'left' ? 'fixNumberLeft' : 'fixNumberRight', value));
    },
    render: function render() {
        var _props = this.props,
            visible = _props.visible,
            data = _props.data;

        return React.createElement(
            YYModal,
            { className: '', width: 600, ref: 'modal', visible: visible, title: '\u914D\u7F6E', onOk: this.handlerOK, onCancel: this.handlerCancel },
            React.createElement(
                YYRow,
                null,
                React.createElement(HeadFixConf, { columnCount: data.length,
                    handleFixCheck: this.handleFixCheck,
                    handleNumberChange: this.handleNumberChange })
            ),
            React.createElement(
                YYRow,
                null,
                React.createElement(YYTransfer, { leftData: getColumnConfig(data),
                    titleLeft: '\u663E\u793A',
                    titleRight: '\u9690\u85CF',
                    ref: 'colconfig',
                    isBtnUpDisableLeft: false,
                    isBtnDownDisableLeft: false,
                    isBtnUpDisableRight: true,
                    isBtnDownDisableRight: true })
            )
        );
    }
});

var HeadFixConf = YYClass.create({
    getInitialState: function getInitialState() {
        return {
            fixNumberLeft: 0,
            fixNumberRight: 0,
            disableLeft: true,
            disableRight: true
        };
    },
    handleFixCheck: function handleFixCheck(type, e) {
        this.setState(_defineProperty({}, type == 'left' ? 'disableLeft' : 'disableRight', !e.target.checked));
        if (_.isFunction(this.props.handleFixCheck)) {
            this.props.handleFixCheck(type, e);
        }
    },
    handleNumberChange: function handleNumberChange(type, value) {
        this.setState(_defineProperty({}, type == 'left' ? 'fixNumberLeft' : 'fixNumberRight', value));
        if (_.isFunction(this.props.handleNumberChange)) {
            this.props.handleNumberChange(type, value);
        }
    },
    render: function render() {
        var _state2 = this.state,
            fixNumberRight = _state2.fixNumberRight,
            fixNumberLeft = _state2.fixNumberLeft,
            disableLeft = _state2.disableLeft,
            disableRight = _state2.disableRight;
        var columnCount = this.props.columnCount;

        return React.createElement(
            'div',
            null,
            React.createElement(
                YYRow,
                null,
                React.createElement(
                    YYCol,
                    { span: '3' },
                    React.createElement(
                        YYCheckbox,
                        { onChange: this.handleFixCheck.bind(this, 'left') },
                        '\u51BB\u7ED3\u524D'
                    )
                ),
                React.createElement(
                    YYCol,
                    { span: '4' },
                    React.createElement(YYInputNumber, { size: 'small', min: 0, max: columnCount - fixNumberRight - 1,
                        disabled: disableLeft,
                        onChange: this.handleNumberChange.bind(this, 'left') })
                ),
                React.createElement(
                    YYCol,
                    { span: '6' },
                    '\u5217'
                )
            ),
            React.createElement(
                YYRow,
                null,
                React.createElement(
                    YYCol,
                    { span: '3' },
                    React.createElement(
                        YYCheckbox,
                        { onChange: this.handleFixCheck.bind(this, 'right') },
                        '\u51BB\u7ED3\u540E'
                    )
                ),
                React.createElement(
                    YYCol,
                    { span: '4' },
                    React.createElement(YYInputNumber, { size: 'small', min: 0,
                        max: columnCount - fixNumberLeft - 1,
                        disabled: disableRight,
                        onChange: this.handleNumberChange.bind(this, 'right') })
                ),
                React.createElement(
                    YYCol,
                    { span: '3' },
                    '\u5217'
                )
            )
        );
    }
});

module.exports = HeadConfig;