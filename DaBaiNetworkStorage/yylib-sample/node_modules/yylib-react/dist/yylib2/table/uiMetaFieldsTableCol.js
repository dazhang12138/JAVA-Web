'use strict';

var YYClass = require('../base/YYClass');
var PropTypes = YYClass.PropTypes;
var field = YYClass.field;
module.exports = [
//field参数列表：字段属性名|属性默认值|属性类型|是否必填|属性描述
field('title', undefined, PropTypes.oneOfType([PropTypes.string, PropTypes.element]), false, '列头显示文字'), field('key', undefined, PropTypes.string, false, 'React 需要的 key，建议设置'), field('dataIndex', undefined, PropTypes.string, false, '列数据在数据项中对应的 key，支持 a.b.c 的嵌套写法'), field('render', undefined, PropTypes.func, false, '生成复杂数据的渲染函数，参数列表：text-当前行的值, record-当前行数据,index-行索引'), field('titleGroup', undefined, PropTypes.array, false, '定义表头如何进行分组显示'), field('filters', undefined, PropTypes.array, false, '表头的筛选菜单项'), field('onFilter', undefined, PropTypes.func, false, '本地模式下，确定筛选的运行函数'), field('filterMultiple', undefined, PropTypes.bool, false, '是否多选'), field('filterDropdown', undefined, PropTypes.element, false, '可以自定义筛选菜单，此函数只负责渲染图层，需要自行编写各种交互'), field('sorter', undefined, PropTypes.oneOfType([PropTypes.func], PropTypes.bool), false, '排序函数，本地排序使用一个函数，需要服务端排序可设为 true'), field('colSpan', undefined, PropTypes.number, false, '表头列合并,设置为 0 时，不渲染'), field('width', undefined, PropTypes.oneOfType([PropTypes.string, PropTypes.number], PropTypes.bool), false, '列宽度'), field('className', undefined, PropTypes.string, false, '列的className'), field('fixed', undefined, PropTypes.oneOfType([PropTypes.bool, PropTypes.string]), false, '列是否固定，可选 true(等效于 left) left|right'), field('filteredValue', undefined, PropTypes.array, false, '筛选的受控属性，外界可用此控制列的筛选状态，值为已筛选的 value 数组'), field('sortOrder', undefined, PropTypes.oneOfType([PropTypes.bool, PropTypes.string]), false, '排序的受控属性，外界可用此控制列的排序，可设置为ascend|descend|false'), field('isShow', undefined, PropTypes.bool, false, '是否显示本列'), field('showIndex', undefined, PropTypes.number, false, '列的显示顺序'), field('color', undefined, PropTypes.string, false, '本列内容的字体颜色'), field('linkUrl', undefined, PropTypes.string, false, '本列内容作为链接显示,URL后面拼接{fieldName}方式自定义参数,其中fieldName必须为表格中存在的列键值'), field('linkType', 'route', PropTypes.string, false, '打开链接的方式，默认路由页面-"route"，打开浏览器新窗口-"_blank"'), field('format', undefined, PropTypes.string, false, '日期格式化yyyy-MM-dd|yyyy-MM-dd HH:mm:ss'), field('mathFormula', undefined, PropTypes.string, false, '配置数学运算公式表达式，例如：{field1}*{field3}+{field2}/{field3}-{field4}，其中{}对应dataIndex值'), field('align', undefined, PropTypes.string, false, '文本内容对齐方式，left-左对齐（默认）、right-右对齐、center-居中'), field('titleAlign', 'center', PropTypes.string, false, '表格标题对齐方式，left-左对齐、right-右对齐、center-居中'), field('fieldtype', undefined, PropTypes.string, false, '表格字段列数据类型标识：string-文本（默认）、date-日期、boolean-布尔、number-整数、currency-精确数值'), field('decimal', undefined, PropTypes.number, false, '表格字段列数据类型为currency-精确数值时生效，定义精确的小数位，默认显示数据原始小数位'), field('comma', true, PropTypes.bool, false, '表格字段列数据类型为number-整数、currency-精确数值时生效，定义是否格式化显示千分位'), field('required', false, PropTypes.bool, false, '表头是否显示必填标识'), field('total', undefined, PropTypes.bool, false, '是否启用列合计'), field('totalComma', undefined, PropTypes.number, false, '当列启用列合计时，千分位格式，默认显示千分位'), field('totalDecimal', undefined, PropTypes.number, false, '当列启用列合计时，精确的小数位，默认无小数位'), field('totalRender', undefined, PropTypes.bool, false, '自定义列合计渲染'), field('innerFilter', undefined, PropTypes.bool, false, '是否启用行内嵌筛选输入框'), field('innerFilterRender', undefined, PropTypes.function, false, '自定义行内嵌筛选组件，当innerFilter=true时生效。'), field('innerFilterProps', undefined, PropTypes.object, false, '绑定行内嵌筛选输入框的相关属性，详细参考YYInput组件属性，当innerFilter=true时生效。')];