'use strict';

var EventUtils = require('./EventUtils');
/**
 * @param onMove func
 * @param onMoveEnd func
 * @param domNode obj 
 */
function MouseMoveUtil(onMove, onMoveEnd, domNode) {
    this._onMove = onMove;
    this._onMoveEnd = onMoveEnd;
    this._domNode = domNode;
    this._isDragging = false;
}

MouseMoveUtil.prototype = {
    constructor: MouseMoveUtil,
    captureMouseMoves: function captureMouseMoves(event) {
        EventUtils.addEvent(this._domNode, 'mousemove', this._handleMouseMove.bind(this));
        EventUtils.addEvent(this._domNode, 'mouseup', this._handleMouseUp.bind(this));

        if (!this._isDragging) {
            this._deltaX = 0;
            this._isDragging = true;
            this._x = event.clientX;
        }
        event.preventDefault();
    },
    releaseMouseMoves: function releaseMouseMoves() {
        EventUtils.removeEvent(this._domNode, 'mousemove', this._handleMouseMove.bind(this));
        EventUtils.removeEvent(this._domNode, 'mouseup', this._handleMouseUp.bind(this));

        if (this._isDragging) {
            this._isDragging = false;
            this._x = null;
        }
    },
    _handleMouseMove: function _handleMouseMove(event) {
        if (this._isDragging) {
            var x = event.clientX;
            this._deltaX += x - this._x;
            this._x = x;
            this._onMove(this._deltaX);
        }
        event.preventDefault();
    },
    _handleMouseUp: function _handleMouseUp() {
        this._deltaX = 0;
        this._onMoveEnd();
    }
};

module.exports = MouseMoveUtil;