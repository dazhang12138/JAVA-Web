'use strict';

/**
 * 数据行移动的助手工具
 */
var _ = require('lodash');

var RowsMoveUtil = {
    /**
     * @method
     * @desc 将数据对应的行id记录，按指定位置进行偏移
     * @param {array} rows 行数据
     * @param {string} rowKey 键值属性名
     * @param {string} rowId 行键值ID
     * @param {number} pos 相对位置值 1(后移一行) -1(前移一行)
     * @param {function} isRowIndex 行数据是否参与行索引计算 return true则参与计算，否则不参与
     */
    moveTo: function moveTo(options) {
        var _ref = options || {},
            rows = _ref.rows,
            rowKey = _ref.rowKey,
            rowId = _ref.rowId,
            pos = _ref.pos,
            isRowIndex = _ref.isRowIndex;

        if (!pos || pos == 0 || !rowId) return; //相对位置为0,则表示不移动
        var currIndex = 0;
        var currRow;
        var moveRows = [];
        //匹配当前需要移动的行信息
        for (var rIdx = 0; rIdx < rows.length; rIdx++) {
            var row = rows[rIdx];
            if (row[rowKey] !== undefined && row[rowKey] == rowId) {
                currRow = row;
                break;
            }
            if (_.isFunction(isRowIndex)) {
                if (isRowIndex(row)) {
                    currIndex = currIndex + 1;
                }
            } else {
                currIndex = currIndex + 1;
            }
        }
        //移除需要移动的行记录
        _.remove(rows, function (row) {
            if (row[rowKey] !== undefined && row[rowKey] == rowId) {
                return true;
            }
        });
        //获取移动后的目标位置
        var toRowIndex = currIndex + pos;
        //移动到首行
        if (toRowIndex <= 0) {
            moveRows.push(currRow);
        }
        //实际显示数(即排除掉过滤后的总行数)
        var rowCount = 1;
        //中间区域进行移动
        var targetIndex = 0;
        for (var toIdx = 0; toIdx < rows.length; toIdx++) {
            var _row = rows[toIdx];
            if (targetIndex > 0 && targetIndex == toRowIndex) {
                moveRows.push(currRow);
            }
            moveRows.push(_row);
            if (_.isFunction(isRowIndex)) {
                if (isRowIndex(_row)) {
                    targetIndex = targetIndex + 1;
                    rowCount = rowCount + 1;
                }
            } else {
                targetIndex = targetIndex + 1;
                rowCount = rowCount + 1;
            }
        }
        //移动到最后行
        if (toRowIndex + 1 >= rowCount) {
            moveRows.push(currRow);
        }
        //返回移动后的行数据
        return moveRows;
    }
};

module.exports = RowsMoveUtil;