'use strict';

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

/**
 * Created by Dio on 2016/5/12.
 * 工具栏
 */
var React = require('react');

var _require = require('react-custom-scrollbars'),
    Scrollbars = _require.Scrollbars;

var YYClass = require('../base/YYClass');
var PropTypes = YYClass.PropTypes;
var field = YYClass.field;
var _ = require('lodash');
//定义META
var uiMeta = {
    name: 'scrollbar',
    fields: [field('width', '100%', PropTypes.string, false, '组件显示宽度'), field('height', '100%', PropTypes.string, true, '组件显示高度')]
};
var YYScrollbar = YYClass.create({
    uiMeta: uiMeta,
    getInitialState: function getInitialState() {
        return {
            width: this.props.width,
            height: this.props.height
        };
    },
    componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
        if ('width' in nextProps) {
            this.setState({
                width: nextProps.width
            });
        }
        if ('height' in nextProps) {
            this.setState({
                height: nextProps.height
            });
        }
    },
    render: function render() {
        var _state = this.state,
            width = _state.width,
            height = _state.height;

        var style = _.assign({ width: width, height: height }, this.props.style ? this.props.style : {});
        return React.createElement(
            Scrollbars,
            _extends({}, this.props, { className: this.className(), style: style }),
            this.props.children
        );
    }
});
module.exports = YYScrollbar;