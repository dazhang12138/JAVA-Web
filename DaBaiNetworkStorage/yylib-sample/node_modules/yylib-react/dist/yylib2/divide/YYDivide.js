'use strict';

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

/**
 * 下拉菜单组件
 */
var React = require('react');
var YYClass = require('../base/YYClass');
var PropTypes = YYClass.PropTypes;
var field = YYClass.field;

var _require = require('antd'),
    Dropdown = _require.Dropdown,
    Menu = _require.Menu;

require('./style/index.less');
//定义META
var uiMeta = {
    name: 'divide',
    fields: [
    //field参数列表：字段属性名|属性默认值|属性类型|是否必填|属性描述
    field('type', 'vertical', PropTypes.oneOf(['inline', 'vertical']), false, '水平或竖直分割符')]
};
var YYDivide = YYClass.create({
    uiMeta: uiMeta,
    render: function render() {
        var type = this.props.type;

        return React.createElement(
            'div',
            _extends({}, this.props, { className: this.className(type) }),
            type === 'vertical' ? '|' : null
        );
    }
});
module.exports = YYDivide;