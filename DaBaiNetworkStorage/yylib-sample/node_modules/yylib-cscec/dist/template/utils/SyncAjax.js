'use strict';

/**
 * Created by xg on 2017/8/10.
 * 使用jquery实现的简单的同步方式ajax工具
 */
var $ = require('jquery');
var _ = require('lodash');
var AuthToken = require('yylib-utils/AuthToken');

var _require = require('yylib-ui'),
    YYMessage = _require.YYMessage;

var SyncAjax = {

    /**
     * Get请求
     * @param url 请求地址
     * @param data 参数
     */
    getJson: function getJson(url, data) {
        return this.request({
            url: url,
            data: data,
            method: "get"
        });
    },

    /**
     * Post请求
     * @param url 请求地址
     * @param data 参数
     */
    postJson: function postJson(url, data) {
        return this.request({
            url: url,
            data: data,
            method: "post"
        });
    },

    /**
     * 执行ajax请求
     * @param options
     */
    request: function request(options) {
        var _ref = options || {},
            url = _ref.url,
            data = _ref.data,
            method = _ref.method;

        var retData;
        $.ajax({
            "contentType": 'application/json;charset=UTF-8',
            "beforeSend": function beforeSend(xhr) {
                // 携带认证信息
                xhr.setRequestHeader('authority', AuthToken.getAuthenticationStr());
                xhr.setRequestHeader('icop-token', AuthToken.getToken());
            },
            "type": method,
            "url": url,
            "data": data,
            "dataType": "json",
            "async": false, // 同步方式
            "success": function success(result, status, xhr) {
                retData = result;
            },
            "error": function error(xhr, status, _error) {
                YYMessage.error(_error);
            }
        });
        return retData || {};
    }
};
module.exports = SyncAjax;